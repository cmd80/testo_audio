88 8 Oo HEHHHSEHHHKEHeHKeKeKHeHeKeHSHeULSHDD YH

ICS515 | ICS VISIBILITY, DETECTION, AND RESPONSE
GIAC Response and Industrial Defense (GRID)

515.3

ICS Threat Detection

GIAC

CERTIFICATIONS

NANS

THE MOST TRUSTED SOURCE FOR INFORMATION SECURITY TRAINING, CERTIFICATION, AND RESEARCH | sans.org

© 2021 Robert M. Lee. All rights reserved to Robert M. Lee and/or SANS Institute.

PLEASE READ THE TERMS AND CONDITIONS OF THIS COURSEWARE LICENSE AGREEMENT
("CLA") CAREFULLY BEFORE USING ANY OF THE COURSEWARE ASSOCIATED WITH THE SANS
COURSE. THIS IS A LEGAL AND ENFORCEABLE CONTRACT BETWEEN YOU (THE “USER") AND
SANS INSTITUTE FOR THE COURSEWARE. YOU AGREE THAT THIS AGREEMENT IS
ENFORCEABLE LIKE ANY WRITTEN NEGOTIATED AGREEMENT SIGNED BY YOU.

With this CLA, SANS Institute hereby grants User a personal, non-exclusive license to use the Courseware
‘ed materials, including course books

subject to the terms of this agreement. Courseware includes all print
and lab workbooks, as well as any digital or other media, virtual machines, and/or data sets distributed by
SANS Institute to User for use in the SANS class associated with the Courseware. User agrees that the
CLA is the complete and exclusive statement of agreement between SANS Institute and you and that this
CLA supersedes any oral or written proposal, agreement or other communication relating to the subject

matter of this CLA.

BY ACCEPTING THIS COURSEWARE, USER AGREES TO BE BOUND BY THE TERMS OF THIS CLA.
BY ACCEPTING THIS SOFTWARE, USER AGREES THAT ANY BREACH OF THE TERMS OF THIS CLA
MAY CAUSE IRREPARABLE HARM AND SIGNIFICANT INJURY TO SANS INSTITUTE, AND THAT
SANS INSTITUTE MAY ENFORCE THESE PROVISIONS BY INJUNCTION (WITHOUT THE
NECESSITY OF POSTING BOND) SPECIFIC PERFORMANCE, OR OTHER EQUITABLE RELIEF.

If User does not agree, User may return the Courseware to SANS Institute for a full refund, if applicable.

User may not copy, reproduce, re-publish, distribute, display, modify or create derivative works based upon
all or any portion of the Courseware, in any medium whether printed, electronic or otherwise, for any
purpose, without the express prior written consent of SANS Institute. Additionally, User may not sell, rent,
lease, trade, or otherwise transfer the Courseware in any way, shape, or form without the express written

consent of SANS Institute. .

If any provision of this CLA is declared unenforceable in any jurisdiction, then such provision shall be
deemed to be severable from this CLA and shall not affect the remainder thereof. An amendment or

addendum to this CLA may accompany this Courseware.

and all software and/or tools, graphics, images, tables, charts or graphs

SANS acknowledges that any
tive trademark/registered/copyright

presented in this Courseware are the sole property of their respec
owners, including:

AirDrop, AirPort, AirPort Time Capsule, Apple, Apple Remote Desktop, Apple TV, App Nap, Back to My
Mac, Boot Camp, Cocoa, FaceTime, FileVault, Finder, FireWire, FireWire logo, iCal, iChat, iLife, iMac,
iMessage, iPad, iPad Air, iPad Mini, iPhone, iPhoto, iPod, iPod classic, iPod shuffle, iPod nano, iPod touch,
iTunes, iTunes logo, iWork, Keychain, Keynote, Mac, Mac Logo, MacBook, MacBook Air, MacBook Pro,
Pro, Numbers, OS X, Pages, Passbook, Retina, Safari, Siri, Spaces, Spotlight,

Macintosh, Mac OS, Mac
There’s an app for that, Time Capsule, Time Machine, Touch ID, Xcode, Xserve, App Store, and iCloud are

registered trademarks of Apple Inc.

PMP® and PMBOK® are registered trademarks of PMI.

SOF-ELK@ is a registered trademark of Lewes Technology Consulting, LLC. Used with permission.

SIFT@ is a registered trademark of Harbingers, LLC. Used with permission.

Governing Law: This Agreement shall be governed by the laws of the State of Maryland, USA.

ICS$515_3_G01_07

= om, ow, ow,

ce
ee a a

oo

es we

ICS515.3 ICS Visibility, Detection, and Response

SANS | ICS Threat Detection

|

© 2021 Robert M. Lee | All Rights Reserved | Version GO!_07

The SANS ICS515 —ICS Visibility, Detection, and Response course was developed by Robert M. Lee with input from
a collection of experts, whose diverse work experiences, knowledge, and skills truly blended to cover the specific
content areas for this course. The author would like to thank them for their support and contributions. Please see the
following page.

Robert M. Lee

Robert M. Lee is the CEO and Founder of the industrial (ICS/OT/IloT) cyber security company Dragos, Inc. He is a
SANS Senior Instructor and the course author of SANS ICS515 —“ICS Visibility, Detection, and Response” and the
lead-author of SANS FOR5S78 — “Cyber Threat Intelligence.” He is currently also a Department of Energy special
service employee on the Electricity Advisory Committee as the Vice Chair of the Grid Resilience National Security
committee.

Robert obtained his start in cyber security in the U.S. Air Force where he served as a Cyber Warfare Operations
Officer in the National Security Agency. He has performed defense, intelligence, and attack missions in various
government organizations, including the establishment of a first-of-its-kind ICS/SCADA threat discovery mission
blending incident response, threat hunting, and threat intelligence together. Lastly, Robert is author of the book
SCADA and Me, Threat Intelligence and Me, Santa and Me, and the weekly web-

comic http://www.LittleBobbyComic.com

Robert may be found on Twitter @RobertMLee or contacted via email at: RLee@Dragos.com

© 2021 Robert M. Lee 1
Contributions By:

Tim Conway

Tim Conway is currently the Curriculum Lead for ICS Security at SANS. He was responsible for developing,
reviewing, and implementing technical components of the SANS ICS and SCADA product offerings and is the
course author of ICS456 — NERC CIP Essentials. He was formerly the director of CIP Compliance and Operations
Technology at Northern Indiana Public Service Company (NIPSCO). He was responsible for Operations
Technology, NERC CIP Compliance, and the NERC training environments for the operations departments within
NIPSCO Electric. Throughout his career, Tim was previously an EMS computer systems engineer at NIPSCO for
eight years, with responsibility over the control system servers and the supporting network infrastructure. Tim
previously served as the chair of the RFC CIPC, is the current chair of the NERC CIP Interpretation Drafting Team,
a current member of the NESCO advisory board, the current chair of the NERC CIPC GridEx 2013 Working
Group, and current chair of the NBISE Smart Grid Cyber Security panel.

Michael Assante

Michael Assante was pivotal in creating this course and it was his vision that pushed me to author it. This class is
dedicated to his memory. For those of you who didn’t know Mike, it is almost guaranteed that your career that has
brought you to the ICS community was influenced by him at some point. I wrote this blog on what Mike meant to
me, and why I would not be where | am today without him. I hope these words help keep his memory alive in this
class: http://www.robertmlee.org/goodbye-mike-assante-thank-you-for-literally-everything/

Jeff Shearer and Jason Dely are both members of the SANS “SROC” team that help create and test technical
components for labs. It’s through their work and dedication with Tim that the kits in the class and interactions with
them were possible. They were the masterminds behind a lot of the hands-on kit work and helped immensely.

Dragos team members also significantly contributed to the course through their own research and just countless

conversations. Additionally, Austin Scott, Grant Freter, Jackson Evans-Davies, and others operated the range and
performed red teaming of the ICS range at the Dragos HQ that is used in the course scenario.

2 © 2021 Robert M. Lee

wo we we ee ee Ye we &

e’ vs bw SF we ww www ww

Case Study: German Steel Works Attack

ICS Threat

Lab 3.1: Detecting Stage 1 Intrusions

Case Study: SANDWORM - BlackEnergy 2 and BlackEnergy 3

ICS Network Security Monitoring

Lab 3.2: Investigating Stage 2 Intrusions Lab 3.3: Traffic Analysis of Control Manipulation

and Physical Consequence
Lab 3.4: Validating System Logic Changes Lab 3.5: Field Point Verification
ICS515 | ICS Visibility, Detection, and Response

As you'll see, this section’s outline largely focuses on intelligence tradecraft. Too often, people advertise
themselves as "threat analysts" or "intelligence experts" without having a fundamental understanding of intelligence
tradecraft. We look at some of the threats in the community (such as HAVEX) and where good intelligence
practices can be used to more accurately understand and defend against such threats. Consider this the "How It's
Made" section of this class where we look behind the scenes into the intelligence world to see just how those catchy
threat-intelligence reports get made.

© 2021 Robert M. Lee 3
Section 3 Objectives

Plan and be empowered to hunt in ICS networks
Understand different detection strategies

Gain familiarity with common tools and approaches

Identify Stage 2 compromises in ICS networks

1CS515 | ICS Visibility, Detection, and Response

Section 3 is all about threat detection. We will start with an understanding of threat hunting which is the human
driven process of searching for threats proactively in your organization. Then we will shift to understanding
different detection strategies and the types of detections you can utilize with various use-cases. Along the way
you'll be exposed to different common tools and approaches with hands on analysis of a compromise in an ICS
network. Being able to identify when a compromise is just an infection vs. something that is focused on the ICS
(Stage 2 of the ICS Cyber Kill Chain) will help you prioritize and triage appropriately.

4 © 2021 Robert M. Lee

Dp

©’ ©) } © WY TY YF © w TF FF FF FF ae Pe Oe ST TG GS G G
oe © &© &© &§ © ©&© @& BW © 6 BW © OB GB GS YS YH GBS |Y | Bw

ws

se Cycle
(PHASE 3)

o

P@iewee ®

Wn

ICS5I5 | ICS Visibility, Detection, and Response

Targeted cyber-attacks are on the rise and represent a serious risk to ICS environments. Research and incident
deconstruction is beginning to show attackers are developing ICS-capable tools and have equipped themselves with
basic knowledge about ICS technology and architectures to be successful. The success of these attacks rest upon
existing ICS vulnerabilities and the inability of existing defensive strategies to deal with prolonged attack
campaigns. Many ICS defenses were optimized to protect against unstructured and nondirected/targeted cyber-
attacks. The majority of strategies rely upon a strong perimeter defense with some host-based protection and good
security hygiene. These defenses are effective against some threats, but they fail to block or illuminate more
advanced intrusion attempts. Many defenses, if breached, provide little to no knowledge of where the adversary has
been and what is occurring inside of the control network. We need to evolve beyond the static perimeter-focused
defense and build new models to complement defense strategies.

Benefits

This step in the cycle will enable you to help the architecture and defense teams stay aware of what the network
topology looks like. Building off of this network knowledge, you can identify network oddities and pair them with
alerts and events on the network to identify the type of adversaries that traditional defenses will not find. You can
help make decisions on whether incident response is needed and provide context to the team. You can also identify
critical parts of the network the team should focus on. The asset identification and NSM phase is the staple that
holds the active defense cycle together. In a more clearly stated way, people operating in this phase should think of
having four main goals:

* Identify network assets and connections that the architecture and defense teams missed and pass them to
those teams for their awareness and use.

* Make recommendations to the architecture and defense teams regarding network segmentation,
chokepoints, and additional sensors that would benefit NSM.

* Identify threats in the network past what traditional defenses would find and make recommendations to the
defense team for the tuning of sensors and defense assets.

* Identify if a threat is severe enough to initiate incident response and make recommendations to management
regarding this while offering context to the events.

© 2021 Robert M. Lee 5
Course Scenario Goals (1)

Refine

What is the adversary’s IP address and domain?

What is the name of the malicious project file?

What did the adversary do to the safety PLC?

What is the malicious routine in the logic and what does it do?
What is the root cause of the attack?

Is the incident connected to C3PO’s incident?

* C3PO:

+ What is the malicious action on the HMI?
* What Register was manipulated with what value?
«What malicious file executed on the HMI and when?

ICS515 | ICS Visibility, Detection, and Response

‘Vhis page intentionally left blank.

6 © 2021 Robert M. Lee

oo @ oo,
rr | | rn)

Case Study: German Steel Works Attack

ICS5I5 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee
BSI's Reporting on Steelworks Attack

* On December 18, 2014, the German government's BSI released an annual report highlighting
investigations over the year including Havex and BlackEnergy?2 infections in ICS networks

* Unrelated to Havex and BlackEnergy2 was a report of a cyber-attack that caused "massive
damage" in a steel works facility
This was only the second publicly known case of a cyber-attack resulting in the physical
destruction of control systems

This was the first time that a government has
come forward to talk about physical
destruction at a facility without prior
evidence/information being leaked or having
experienced public pressure

Ref: Siemens

ICS515 | ICS Visibility, Detection, and Response

On December 18, 2014, Germany's Bundesamt fiir Sicherheit in der Informationstechnik (BSI, translated as Federal
Office for Information Security) reported on its annual findings. In one case, it noted that a malicious actor
infiltrated a plant network of a steel works facility. The adversary used a spear-phishing email to gain access to the
corporate network and then pivot into the plant network. There, the adversary showed a relative amount of
sophistication and ICS knowledge and proceeded to cause multiple components of the system to fail. This caused a
blast furnace to become unregulated, which resulted in massive physical damage. The only other time there was the
physical destruction of control systems (publicly known) was Stuxnet. This exciting and worrying story mostly was
buried in the news (partly due to the Sony breach, which was going on at the exact same time).

References:

German BS] Annual Report:
https://www.bsi.bund.de/SharedDocs/Downloads/DE/BSI/Publikationen/Lageberichte/Lagebericht2014.pdf?__ blob
=publicationFile

Dragos Security analysis and English translation: http://dragossecurity.com/blog/

The Wall Street Journal analysis: http://blogs.wsj.com/cio/2014/12/1 8/cyberattack-on-german-iron-plant-causes-
widespread-damage-
report/?utm_content=buffer59558&utm_medium=social&utm_source=twitter.com&utm_campaign=buffer

8 - © 2021 Robert M. Lee

D

@ @® @®

TW @®

TT T ®

eT VT TT TT TT T PT HT OP HP

oe 8 § &@ 8 Bw 8& © &8 6 & & & & & & SS BS BS BY HY Bw

Ww

Focus on the fact that the adversary was assessed to have IT and ICS knowledge. Physical destruction is not a

3.3 Federal management incidents

Unlike the federal management, companies do not have the obligation to report serious 1T-security incidents to the BS). The UP KRITIS has been
allowing participating critical infrastructure operators to exchange information about incidents far many years now. The BS! also has the Alliance for
cyber security, a platform that can be used to (anonymously) report incidents that could potentially be relevant for other localities or that need
evaluation or for which help is needed.

‘The goal of this alliance is to gain knowledge about new attack techniques or ertical incidents with big impacts. The BS! analyses reports and makes the
anonymized evaluations available to a big circle of addressee’s. This method is usee lo provide early findings about new attacks and possible
prevention methods.

‘So far, mostly smail and medium sized companies have contacied the platform.
3.3.1 APT-Attack on industrial sites in Germany
Fact: Targeted attack on an iron plant in Germany

Method: Through Spear-Fishing and ingenious Social Engineering, attackers got initial access to the office network of the Iron plant, From there. they

|successively worked their way in to the production networks.

Harmful effect: There was an accumulation of breakdowns of individual components of the control system or of entire facilities. The system breakdowns
resulted in an incident where a furnace could not be shut down in the regular way and the furnace was in an undefined condition which resulted in
massive damage to the whole system. Target groups: Operators of industrial plants.

‘Technical skills: The technical skills of the altackers can be described as very advances. A variety of aiferent intemal systems were compromised and
industrial components. The attackers had advanced know-how of not only conventional {T-security, but also detailed technical knowledge of the
industrial control systems and production processes that were used in the plant

malware-based threat after the initial attack vector (as far as we know).

Reference:

Dragos Security analysis and English translation: http://dragossecurity.com/blog/

© 2021 Robert M. Lee

Example Closed-Loop Blast Furnace

@ Diagnosis
@ Therapy Closed-loop control
@Explanation |

| Coke rate

| Burden basicity
Fuel injection

| Steam addition

| Oxygen addition

Fine adjustment
| of burden distribution

Hat stoves HMI

Ref: Siemens
ICS515 | ICS Visibility, Detection, and Response

A blast furnace is great technology but not exactly the safest piece of equipment. A lot of good engineering goes ~
into making them safe, but from the aspect of what can go wrong, these systems are still something to be watched. (=
As an example, any time we are adding things like fuel and oxygen together, we have to think about the safety

implications. An untrained adversary could also easily click away at the HMI, which shows enough to be able to ~
add more fuel and oxygen. So what prevents this? Good safety engineering. The safety measures and systems {=
connected here help keep things in a safe condition. Unfortunately, if an adversary was to muck with those safety

systems, or even just the sensors feeding into them — that could cause additional havoc.

Reference:
Siemens

/

4

)

wy ww W

10 © 2021 Robert M. Lee -

iw

w

Svs OE EH Hwee © wb © we we © ww ww

vu Js

Breakdown of the Atta he Knowns

We know that the initial attack vector was a phishing email and that the corporate network was the access point into
the ICS. We also know that over time, the individual components broke down and caused physical damage. We also
know that there's no other reported information such as the motivation for the attack.

© 2021 Robert M. Lee 11
Breakdown of the Attack: The Unknowns

The corporate
network was
likely directly
connected to
the plant
network or
contained
trusted access

Steel facilities
often have a The damage

|
was likely not
sees Peatong| | done
_ intentionally
componeits om wit
havetailed know and could
Gadar have been
Cee espionage gone
movement Eon’

It appears that
there was no
malware
involved past
the initial
attack vector;

the rest os
appears to
direct

interaction

ICS515 | ICS Visibility, Detection, and Response

What we do not know, but can make an educated guess on, is that the corporate network was likely directly linked
with the plant network through trusted zones, or worse. And although the steel facility likely had legacy
components, there should have been safety systems and fail safes for the blast furnace that might indicate that the
attack was targeted. If this is the case, it may have been manipulated through the HMI.

12

© 2021 Robert M. Lee

a) ) ) en) ee)

oq qm

w
vw 8 FS Fewest & FF Fe ee ee

vos wv vv vw

German Steel Works ICS Cyber Kill Chain

‘STAGE 2 - Intrusion

Delivery

Install | Modity

¢:

‘Observable Steps

STAGE 2 -ICS Attack
Develop
Test
Deliver
Install / Modify

Execute C3 Attack

Furnace

Attack with Impact

Tenaya ae
Network, Ahcations, Serees)

The attackers achieved an attack with impact and showed they had detailed ICS knowledge. This was not the first
time they were in an ICS, and whether or not they intended to cause the attack has no bearing on its impact and

observation by the defender.

© 2021 Robert M. Lee 13
Lessons Learned

Monitoring of the control system and process networks increases their reliability

« There were multiple failures in the components of the control system over time

Interconnected devices and trust zones will be abused

+ Adversaries value targeting corporate infrastructure (familiar ground); it presents a variety of
methods of pivoting into the control system

Incident response is important, even for those not in a critical infrastructure

+ Although the plant's systems were critical to its owners, it was unlikely to be considered national
critical infrastructure

Threat sharing is important, and the threat is not always malware

* Case studies such as this allow for lessons to be learned

1CS515 | ICS Visibility, Detection, and Response

From this case study, we can extract a few important lessons learned that directly apply to ACDC. First, monitoring
of the control system and process networks absolutely increases their reliability and security. NSM would have
identified odd commands, network traffic, and adversary movement on the network, but may have also helped
identify the issue long before the blast furnace experienced a failure. In the process of doing NSM, the analysts may
have also been able to identify architecture and assets that were likely undocumented or unknown—including
unknown connections into the corporate environment. If there were known connections, they could have and should
have been placed into chokepoint-type setups for analysis. Corporate customers never have a reason to be able to
directly interface with HMIs or other control systems.

After the NSM personnel identified a threat, IR personnel could have taken the appropriate measures to help keep
operations going or, more likely in this scenario, identified that operations needed to halt before physical destruction
occurred. The facility also likely did not think of itself as critical and therefore, may not have had Incident Response
personnel. We also saw firsthand that this case study was important to share with the community. It is useful in this
class and is useful to help others learn from the threats and build best practices for defense.

All that is easier said than done, but it is doable. And we must take a mature response to adversaries if we are ever to
win—that mature response includes doing security.

The initial attack vector for the steelworks attack was a phishing email that likely contained some sort of "payload"
(also identified as "dropper") to gain access.

Past the corporate network, though, it does not appear that any malware was involved, yet the adversary's actions
were obviously a threat to the facility (intent + opportunity + capability). Understanding the threat's actions in the
plant network required more than malware analysis; understanding a threat requires thought processes and
examinations. This section's class will be heavily focused on malware analysis because this is the bulk of threats
faced. However, direct interaction from a threat without malware must be understood to be relevant and dangerous,
but also something that can be examined, understood, and countered.

14 © 2021 Robert M. Lee

YF TY F VT WT W

)

®Y @

wry? ww © WF ww Ww w@
oe 8 SF Fe ee Fe Hw He KH He He KHeKHKeKeeOHermdrHLDh wh

ICS Threat Hunting

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee

Threat Hunting

Threat hunting is a Threat Hunting requires the
focused and iterative a focus to be on the people

approach to searching out, ra

identifying, and ; fo, Your job focuses on human adversaries,
understanding adversaries 4 rd but you may not encounter adversaries

fuses the defender’s ; You need the open-mindedness of a
pes Lo new person, but hunting is not for
new folks
Significant value: ; 5 Product vendors will pitch hunting
ignificant value: i 7x ase but it’s not about the product

Going beyond ' y :
automation footprint wy You need to rely on automation,
Adding to the aes o 4 but you can’t fully automate

ee . ae eee hunting — hunting is one step
automation footprint ) ay eA A beyond automation
Finding collection gaps i
Preparing for IR

1CS515 | ICS Visibility, Detection, and Response

Threat hunting is a focused and iterative approach to searching out, identifying, and understanding adversaries
internal to the defender’s networks. It is a type of active defense (active defense also includes aspects such as
incident response, which is not a component of threat hunting). The concept with threat hunting is that it helps
ensure your organization identifies the “unknown” threats that your normal security practices aren’t capturing. It’s
very much a specialized team of folks who have the expertise to hunt for the truly advanced threats.

Presented here are five concepts; each support the first, which is that threat hunting requires the focus to be on the
people. However, this does not just mean the defenders, but also the adversary. Hunting is the epitome of a dual
relationship between the adversary and the defender. Although we all hope to keep adversaries out of systems, there
is no purpose for threat hunting if no adversary exists. Other types of security can contribute to monitoring, reliance
of the network, and even operations efficiency increases observed through network and system interaction. But

hunting is solely focused on the human element.

The value of threat hunting is not only going beyond your current automation footprint (your tools, detections, etc.)
but also in bringing that automation footprint forward. When you do a hunt there should always be an output such
as creating detections off of what you hunted for to move that effort into a more automated fashion. Further, one of
the core benefits of threat hunting is the revealing of collection gaps and data issues. Essentially, threat hunting is

incident response without the incident, and can help you prepare more fully.

16 © 2021 Robert M. Lee

ve TF TF TF FT SF

w

ow @w@ @W

oo ww ww

wo wo

aw
a nn a) 2

CO

58 8 8S 8

When to Threat Hunt

Late In Your Security
Journey

+ Develop and Deploy
Detection Strategy

Move into continuous |
Security Operations |

«+ Threat Hunt regularly (e.g.,
quarterly to annually) to go
beyond and then extend
automation

Early In Your Security

Journey

« Develop Scenarios You Are
Concerned About

« Plan a Table-Top Exercise
and IR Plan

¢ Threat Hunt to practice
that incident and identify
gaps

ICS515 | ICS Visibility, Detection, and Response

It is not appropriate to constantly be threat hunting. What most organizations call continuous threat hunting is just
normal security operations. Triaging alerts and searching out adversaries from the signals you receive is part of
your automation footprint and ultimately is reactive (identify a detection and then triage it). Threat hunting, when
done correctly, is more intensive and provides more value to go beyond that automation footprint. There are two
places in your security journey that threat hunting naturally comes into play and provides the most value.

The first is in the early days of your security journey. As you’re trying to figure out priorities and what you are
going to do (e.g., your security roadmap) it is very useful to identify the threat scenarios you care about most, based
on intelligence-driven and consequence-driven viewpoints. From there, it is appropriate to develop an incident
response plan against those types of scenarios, usually prioritizing 3-5 scenarios. Those scenarios should turn into
table-top exercises that are orchestrated across IT and OT and often with executive leadership awareness and other
team insights (e.g., HR and legal). However, one common issue with table-top exercises (TTXs) is that they are
based on what you think you know about the environment. Threat hunting can be a huge value add here by
essentially testing the TTX. A threat hunt performed this way is ultimately incident response without the incident.
You would take the TTX/scenario and create a hunt in the appropriate network to search for the threat you’re
concerned with in the scenario. That will provide feedback if you have the data you think you have, how you’d get
the forensic images you would need in the incident, etc. The output will ideally not be finding threats, but in
preparing for them.

Additionally, later in your security journey for the given focus area or sites you will ideally have put in some
automation footprint. That automation footprint will include some passive defenses that are providing prevention,
such as firewalls, but also passive defenses like network analytics and detection products. Have your analysts take
an active defense approach to leverage and identify issues and threats. You’ll have essentially moved into
continuous security operations. At that point, a threat hunt should be done regularly, as often as quarterly, but at
least annually. These can be different sized scoped efforts bound by the focus and time (e.g., don’t just hunt open
ended as you will waste a lot of time). Here you are searching for those threats that are bypassing your automation
footprint and in doing so create deliverables such as new detections or sensor placements to increase the coverage
of your existing automation footprint.

© 2021 Robert M. Lee 17
A Practical Model for Threat Hunting

- No one way to threat hunt

* Priority should be on
having it be a human-led,

hypothesis driven process

« The Practical Model for
Threat Hunting provides a
great sample model to
leverage

ICS5I5 | ICS Visibility, Detection, and Response

There is no single way to perform a threat hunt. It ofien is a very personal approach depending on both the analyst
and the intent of the threat hunt. However, when threat hunting is most effective, it is human-led (not being overly
dependent on automation) and is hypothesis driven. A hypothesis must be something easily stated, and it must be
testable. Those core components of hypotheses make them well suited to help analysts hunt in their organizations
by guiding and scoping that effort and ensuring some level of success as an output.

However, Dan Gunter and Marc Seitz developed a very useful model, identified here as the Practical Model for
Threat Hunting, that builds on quite a bit of work in the US military community as well as other models, such as the
Diamond Model. It provides a repeatable approach to structure threat hunting. It is the model that will be explored
here in the class and is generally recommended as a conceptual model.

Reference:
Hunting-with-rigor.pdf

18 © 2021 Robert M. Lee

rr GP GT THT GH EES OH

am @

oo a7 09 02 4 @

om
ss os 8 wwe FS ewe we weweeewe ww we

oso JS J

we

}

ws

Why are we hunting?
What do we hope to achieve?

Think about the potential outcomes and what
would drive the most value to the organization.

Example:

DRAGONFLY has targeted numerous electric,
mining, and petrochemical companies in the ICS
networks. We need to understand if we are currently
compromised. An outcome would be better
detections against DRAGONFLY ’s capabilities.

ICS515 | ICS Visibility, Detection, and Response

In the Purpose phase you are trying to capture exactly why you are hunting, what you hope to achieve from the
hunt, and the potential outcomes that will drive value. Essentially, this is setting the requirement. Without good
requirements, the scope of the hunt will often become too large or untestable, resulting in prolonged hunts of less
value.

It is ideal, but not required, to leverage other people to brainstorm the requirements. As an example, understanding
the operations staff's concern or business leaders’ concerns will help tailor your approach. You can also leverage
emerging events (a new incident in your sector) and your threat model (what types of threats you care about most)
to start driving those requirements.

In this example, we might flag that DRAGONFLY has targeted numerous companies, and that our company has

both electric and petrochemical operations. Therefore, we want to understand if DRAGONFLY is already in our
environment or not, and to gain better detections as an outcome for them and their TTPs.

© 2021 Robert M. Lee 19
* What is the scope of the hunt?

* Where are we hunting and for how long?

* The creation of a hypothesis to test and the tightly
focused scope will ensure a more successful hunt.

Example:

Hypothesis: DRAGONELY has leveraged trojanized
applications in the ICS to deploy HAVEX malware.

Where: Class-A ICS networks focusing on Level 2.

Duration: 5 days of analysis.

In the Scope phase it is important to keep to a reasonable scope for the type of hunt and how many resources you
have. When you are looking for unknown things, i.e., you don’t know if you’re compromised or not and you’re
searching, that can lead to a significant amount of resource expenditure without an understanding of when you
should stop searching. Therefore, scope is critical to making sure you finish the hunt in any reasonable amount of
time — analysts love to analyze, and they will keep hunting if not set up for success from the start.

To create a good scope, consider not only the duration of the hunt but also the most relevant sites and data sources
that would be important to you. You can talk yourself into how anything is potentially relevant but keep it to what is
most directly relevant to what you are looking for. As an example, DRAGONFLY could be anywhere in our
organization but focusing it on the Class-A (high priority) ICS networks is the most relevant to us, specifically
looking at what is happening at the HMt/Historian/EWS type supervisory level of the network. We’re going to end
up really caring about native ICS protocols such as OPC and scanning internal to the network. In this case we say
we're going to scope the effort to 5 days.

The most important part of a hunt is the hypothesis. Getting this correct will naturally help us scope the effort. A
key component of hypotheses is that they are testable. Do not come up with hypotheses that are open-ended. In this
case the hypothesis is that DRAGONFLY has leveraged trojanized applications native to the ICS network to deploy
HAVEX malware. If we already have detection capabilities and are checking for indicators of HAVEX, you could
remove the HAVEX part of the hypothesis to note that its trojanized applications with new malware leveraging the
same TTPs. Hunting is not indicator checking and scoping. That is an important effort much easier to accomplish
and not worth your time in a hunt. What we have done though is make a straight- forward, testable hypothesis.

20 © 2021 Robert M. Lee

th)

on a ao a 28 8 @ F&F WwW Be TF BW WM BDH DW PV

>

o-
re FF FF OF FF TF FH SF FF FF FF SF SS ee ww

ced

Genera Hypotheses

Domain
Expertise

. Friendly or
Threat
Intelligence

ICS515 | ICS Visibility, Detection, and Response

There are three types of hypothesis generation. You can do so based on your experience (Domain Expertise), on an
understanding of the environment and organization (Situational Awareness) or on friendly or threat intelligence.
Understanding what type of hypothesis you’re generating, and how you come up with ideas, will influence how you
collect data and detect threats in your environment.

Domain Expertise is your understanding of the problem. At some point you were likely influenced from intel or
situational awareness along the way, and now it is ingrained in you. As an example, I might understand that updates
to the ICS outside of a down period or maintenance period are uncommon. | don’t need anything or anyone to tell
me that, as it’s experience and my understanding of the problem.

Intelligence driven (friendly or threat intel) is taking my cue from someone or something else, with an
understanding of what our defenders are doing (friendly) or what the adversaries are doing (threat). It is not looking
for indicators, as that is not part of threat hunting, but it is instead being aware of their TTPs, victimology, and types
of infrastructure that an adversary leverages. Even understanding motives can help me understand where we hunt.

Situational Awareness is the world around us, meaning that it could be related to non-security events, such as
geopolitical conflict between states that might be a trigger event for certain threats. It might be based on things like
acquiring another company and generating a hypothesis that they’re already compromised, and it can be things like
understanding our ICS deeply enough that we understand the consequences of what can happen and how, regardless
of the threats that target them. Consequence analysis is one of the more powerful forms of situational awareness-
based hypotheses.

Reference:
Hunting-hypotheses.pdf

© 2021 Robert M. Lee 21
Sample ICS Threat Hypotheses

Malicious An adversary

Stale updates and inthe —

| aoe patches will network will

ee occur out of exfil process
cycle historian data

Malware will

Targeted
threat groups
will steal
HMIs sonnets
ocuments

Adversaries
will gravitate
toward

Let’s consider some sample hypotheses and how they might drive how we perform network security monitoring in
an ICS.

As an example, if we expect that malware will initiate Internet checks (such as reaching out to Bing.com) then we
would consider how we would collect that data. We could capture pcap off of the ICS segments we are concerned
with, we could look to see any proxy logs or DNS logs that we have, and we could potentially search on the host
itself for recent queries made.

In another example, if we expect that malicious updates or patches to the network will likely occur out of cycle,
then we could have signatures deployed to look for this type of activity during non-maintenance and update periods.

If we expect a targeted group to achieve a Stage 2 ICS cyber-attack on our environment, then they at some point
would need to understand the process. This could be done by interaction with the HMI and historian but would also
likely require them to understand and gain access to engineering documents. Where these engineering documents
are stored (such as off the ICS on the business network or in a contractor’s network) might guide how we collect
and analyze that activity.

This process of generating hypotheses requires you to embrace intelligence, domain expertise, and situational
awareness to fully understand your environment and identify abnormalities. Understanding hypotheses ahead of
time allow you to identify where you need to collect and detect on adversary information. Eventually, you should
attempt to increase your collection capability while automating previous “hunts”. If you already know what
malicious looks like, be sure that you develop an analytic or automated process to deal with it so that you can focus
on the “new threats” in the future. Hunters should be specialized teams, not regular whack-a-mole security
processes.

Remember — no one uses Bing.com.

22 © 2021 Robert M. Lee

@

!
wr we PF wow we ew WF FP BP ee oe ee ee ee ee

w

\ |

wo 2

* What are the data sources we will use?

* What insight do we have for the hypothesis?

* What people and tools will we leverage?

Example:
Data Sources: Leverage Calistoga’s CMF.

Insights: Intel’s analysis of DRAGONFLY’s TTPs
and HAVEX’s capabilities.

People/Tools: ICS515 Students leveraging open-
source tools such as Wireshark for network analysis.

ICS5I5 | ICS Visibility, Detection, and Response

With a good understanding of why we are hunting and what we hope to achieve, against what hypothesis with what
scope, we are then ready to enter the Equip phase. In the Equip phase it is about determining the
people/process/technology side of the hunt. What tools are we going to be leveraging, what staff are we pulling into
the hunt, and what data sources are we able to leverage? This is where having a CMF gets incredibly helpful —
understanding the combination of the hypothesis and the collection is a perfect combination to expedite our efforts
and make them more successful. Instead of trying to get into the environment and then determine data sources and
then determine what people and tools are necessary we can do that in advance.

We can also equip ourselves with insights depending on the hypothesis. Because this example’s hypothesis is

focused on DRAGONFLY we’d want to understand their TTPs and capabilities. So leaning on the intelligence team
or just gathering those insights ourselves would be a great thing to equip ourselves with.

© 2021 Robert M. Lee 23
Plan Review
+ Does our plan meet the Purpose?

« Do we need to adjust data sources, people,
tooling, or even re-scope because of gaps?

Example:

HAVEX leverages OPC, but there are no OPC
comms in Calistoga’s network. DRAGONELY was
using OPC to map out the infrastructure, so we will
want to focus on data sources that help asset ID.

Plant personnel are not available due to peak season
production; we will not be including Engineering
Drawings. This will not impact the outcome.

1CS515 | ICSVisibility, Detection, and Response

Combining what we’re looking for as an overlay on the CMF will help us quickly determine if we will be
successful or not. As an example, if we think we need to leverage OPC communications, but there are no OPC
communications in Calistoga’s network, then it’s pointless to educate ourselves on the topic or search for those
abuses. Instead, we might determine that DRAGONFLY would have to use ICS port scanning and native
communications other than OPC. Reviewing that with what is available can quickly keep us on track. Additionally,
if there was not an installed application on the system (trojanized applications was a tactic of DRAGONFLY) then

reviewing all possible host logs is also pointless. We'd be focused on understanding new installs and process
execution followed by communications to controllers.

You will find that various data sources and personnel are available and are not available during the plan review. It’s
ok to quickly tailor the plan. As long as you are still meeting the original objective, you can continue on.

24 © 2021 Robert M. Lee

wo @ @ ww @

Oo @ W@W @W @ @w

@, a, a,

2 7 @

=
ose ' FW wo HvHeHeeeuisbubsewwsws

~~ eo we wT FS Ww WS

Example: DRAGONELY and Calistoga CMF

DRAGONELY TTP’s:
* Automated Collection

* ICS Port Scan on Common ICS Ports

° Enumerating tags via OPC
* Trojanized Applications

° Legitimate ICS installers (VPNs and

connectivity apps)

Triconex Safety System _| Engineering Workstation

* Command and Control

° Hardcoded C2 servers

* Beaconing over set intervals (e.g., ~24 min)
* VPN access directly

Network Appliance

Data Type Syslog Windows Host Events

Windows Host Events

Network Traffic Analysis

Packet Capture

Data Storage Location Local Enterprise SIEM

Enterprise SIEM

Network Appliance

Network Appliance

Date Storage Time 7 days 90 days

90 days

6 months

7 days and on demand

Relevant Data Sources
Windows Host
Events
Network Traffic
Analysis
PCAP

Need to Add
Collection:
- VPN logs

ICS515 | ICS Visibility, Detection, and Response

From our understanding of DRAGONFLY and our CMF, we can quickly identify the most relevant data sources,
where they are located, and for how long we have them. We have 6 months of traffic analysis, 90 days of Windows
event logs, and 7 days on demand of packet capture. We’ll leverage the packet capture but it’s only a 7-day rolling
window, which means if we were targeted prior to that window, it’s not likely to be very useful. We can get to a
good answer for 90-180 days looking back across the environment. The 7-day peap will likely play an important
role in determining if a threat is still active, and in developing the detections as it is essentially raw/full collection

for us to use.

© 2021 Robert M. Lee

25
* Perform the threat hunt.

* Document observables throughout the process
especially as it pertains to the desired outcomes.

Example:
« Analyze PCAPs from Calistoga Refinery looking

for ICS protocols being used to profile multiple
controllers.

Analyze PCAPs and Firewall logs looking for
abnormal VPN usage.

Analyze host-based logs looking for new
applications installed, especially during
production time and not maintenance periods.

ICS515 | ICS Visibility, Detection, and Response

In the Execute phase you proceed with the hunt and get into the technical analysis and data collection. As an
example, we would analyze packet captures from Calistoga Refinery looking for ICS protocol usage, especially on
profiling multiple controllers (ie., protocol usage that was abnormal for the systems they are communicating to).
Further, we’d review the VPN and Firewall logs looking for abnormal usage and look at host logs for applications
installed recently. Then we would analyze those files to see if there was any connectivity or other application that

shouldn’t be there.

The Execute phase can be much more efficient and focused if we have followed the model to this point.

26 © 2021 Robert M. Lee

oe ©

on eeseeeeee

anmam@w & & ®

oe
os § &§ FC FFF eee ee Uae

oe ss

es wo J

Feedback

¢ Gather feedback on the entirety of the process.
* Capture outcomes/deliverables.

Example: :
HAVEX was not found in the Calistoga refinery. One of |
the tactics explored was the abuse of ICS protocols to
perform asset ID. We were able to leverage the sensors

to achieve this analysis. We only have them at Calistoga
though. Recommendation is to deploy sensors in other
networks where we care about DRAGONFLY.

Detections were created for identifying a single system,
leveraging Ethernet/IP profiling multiple controllers.
Another detection was created for archived files being
sent from an L2 device through VPNs and direct to the
Internet.

ICS515 | ICS Visibility, Detection, and Response

At the end of every hunt there is an output. Simply not finding threats is not a good outcome. The point of hunting
is finding the threats we’re looking for, but some of the best outcomes are in tailoring our collection, realizing we
had gaps, and that we wouldn’t be successful without extending our automation footprint, etc. In this case we did
not find HAVEX in the Calistoga refinery, but we know of a few tactics that we can turn into detections across our
environment. Further, the pcap analysis was manual to collect and check, and far from continuous monitoring; the
recommendation of not only deploying sensors but exactly where to deploy them can extend our automation
footprint, putting our organization in a much better place, and make future checking efforts much more efficient.

© 2021 Robert M. Lee 27
Threat Detection Strategies

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee

&@® @@ &@ & @

we FT &

oo &

@

ea®mgqa@man#kag’mss &
oF FF KF HFK KF KEK HHH HEE HH

en en

Threat Detection —-The Goal

Detect * :
The point of :

detection is not
the alert; it’s
what you do
with the alert -
and why.

An Example Detection and Investigation Process

Identify Detect Detect the
” » aes

In IT security, there are many cases where the goal of the detection is just the blocking of activity. Even when
things are wrong, it’s often not a big deal for the end users. Security tries to be as accurate as possible, but the
worst-case scenario is something malicious running and giving the adversary access. Therefore, detection serves
two roles: investigation and blocking.

In ICS security, the current status of the ICS dictates that the point of the detection is the investigation and post-
investigation action. An immediate “block because it might be bad” approach does not work in ICS. The worst
thing that can happen is a loss of safety or reliability even if malware was blocked; not the malware running. Think
about a case where malware infects critical system processes to the alarm server. Antivirus deleting it compromises
the reliability, and potentially the safety, of that system. Security has a different purpose in these environments.

The goal of threat detection in ICS security is not the detection itself, but the investigation and post actions.

Therefore, there are “best” ways and not simple “choose your favored approach” answers to threat detection in ICS
security.

© 2021 Robert M. Lee 29
The Four Types of Threat Detection

Modeling Threat Behaviors

Configuration Analysis Indicators

ICS515 | ICS Visibility, Detection, and Response

There are four types of threat detection split across two categories. The four types are configuration analysis,
modeling, indicators, and threat behavior analytics. The categories are environment and threat.

Configuration analysis is an environmental-based approach to identify your system or network well enough to
spot changes. You are quite literally looking for “newness.” What is new in the environment from the
configuration? This is a whitelist-styled approach. Technically, it can catch everything because an adversary
eventually has to do something new to do something malicious. But this has the highest rate of false positives
because it technically catches...everything.

Modeling is the evolution of configuration where a model is applied, often a mathematical model such as a
machine learning technique, to the data set to develop a profile for the environment. As an example, a machine-
learning model might dictate that the configuration evolves over a set amount of time and has acceptable changes.
Maybe Function Code 121 isn’t used often, but it’s ok to be used as long as it’s not used more than 5 times in a
24-hour period. Modeling is great at identifying “anomalies” in the environment and thus can catch truly novel
techniques. However, the two big downsides to anomaly detection is that there is a constant care and feeding
required (there is no 30-day bake-in period and then you’re done—you constantly have to train the model) and,
most importantly, no environmental-based detection approach can give context about the threat. So analysts are
left with contextless alerts. The entire cost of ownership of the investigation and what anomalies matter, why, and

what to do about it is on the defender.

Indicators look for specifics about adversary activity such as the digital hash of the malware. They technically
contain the most context when used correctly, but they are often used incorrectly as they are expanded in what
they look for until they become useless (provide no context and poor detection). Atomic elements of intrusions
and malware change so quickly that an indicator-based approach would need a near constant stream of ever-
changing indicators flooded into the environment.

Threat Behaviors are the evolution of indicators. Instead of looking for specific attributes from an adversary or its

capability, the analytic looks for the tradecraft. This is quite literally codified adversary TTPs. In this way, threat
behavior analytics still give context as to what a defender is looking at when a detection is

30 © 2021 Robert M. Lee

@w Pp

‘V7 vv PF FBP PW @ @®

To ® @

wo

ee & ®
www wwe ©» ww &

wo

we &© &© & &S Jw Ww Ww Ww

ar

generated, but they are not bound to specifics. Instead of caring about a specific aspect, such as the VPN IP address
and the MDS hash of the file and the commands sent to the RTU, a threat behavior analytic would alert anytime
someone uses a VPN to access an HMI, drop a new file, and then send commands to the RTU. It focuses on the
tradecraft, not the specifics, and thus can scale not only across attacks but even scale across entirely different
activity groups. “DNS exfiltration from an HMI” may require an infinite number of indicators, but one threat
behavior analytic across any adversary.

Reference:
The_Four_Types-of_Threat_Detection.pdf

© 2021 Robert M. Lee 31
Configuration Analysis

* Config Analysis looks for changes
in current configuration such as:

° Newness
Assets, Connections, Protocols,
Protocol Values, etc. not ever
observed before
« Changes
* GPS clock modification
+ Project File Upload/Download
* Restarts
° Key Switch Off/On

Firmware Update to PLC
alert udp any any -> any 161 (msg:"Firmware
update command to Phoenix Contact PLC via
SNMP Detected"; content:"|a3|"; content:"|0e 2b
06 01 04 01 a1 7a Ob Ob Ob 02 04 01 00|";
distance:0; content:"|02 01 02|"; distance:0;
within:3; priority:1; sid:9000305; rev:1;
threshold:type limit,track by_src,count 10,seconds
86400;)

Logic Update to PLC
alert tcp any any -> any 48898 (msg: “New Logic
Applied To PLC via Beckhoff ADS";
content:"beckhoff"; content:"MainTask Instance
Mappings.xml"; sid:9003470; priority:1; rev:1;)

ICS515 | ICS Visibility, Detection, and Response

Configuration analysis in its most basic form looks for “newness”, or the first time something happens for the first
time. That implies against all of time. This should not be confused with a baseline event that occurs just across a set
of time. If you want to know that a new protocol value is seen, compared to the last 24 hours, that would be a
modeling-based detection. But if you’re looking for a notification that a protocol value was seen for the first time in
your environment, that would be a configuration change. It seems pedantic, but baselining environments is not
necessarily the same thing as identifying newness. The easiest way to keep this consistent is if you’re comparing a
configuration to a set of time and looking for deviations, it’s actually modeling — the key component being the time

comparison.

Beyond newness though, Configuration Analysis can be extremely useful to notify analysts of any changes to the
configuration. As an example, a PLC with the key in RUN mode that then switches to PRGRM mode is a change in
the PLCs configuration. When it switches back to RUN it’s a change in the configuration as well. Being aware of
the various configuration changes across the environment, such as logic changes, can serve as a great forensics
source. You would not want to triage these detections but have the notifications available for reviewing changes in
the environment after you already have another notification or event you are triaging and trying to add context to.

In the examples above we see two Suricata detections. These were developed by the Dragos R&D/Intel team, as
were the other Suricata examples across the next few slides. In the first it’s looking for a Firmware Update to PLC,
in this case specifically Phoenix Contact, and noting that SNMP is being used on the PLC to change its
configuration. The second is looking for a logic update applied to a Beckhoff ADS PLC. Both of these events
would be good to know about, but again not something worth triaging without some other context.

Configuration Analysis does not contain context of how or why something is malicious or could be malicious.
Adding that threat context would move the detection to a Threat Behavior. Technically a Configuration Analysis
based detection and a Threat Behavior based detection could look for exactly the same thing. The separation is the
context — but these would be horrible Threat Behaviors. There is an expectation on triaging those, and these instead

would be better atom
triaging. For now, these are of forensic value.

32

ic events that are then put with other events and context to make a better detection worth

© 2021 Robert M. Lee

Civ)

@ @ @ @ @ @

@ ww W@W

eo omoaqaqeeqgg@wme@eseqwv @W
wo wow © F&F © Oo © © © © & OS w&

vy

Modeling

* Modeling looks for deviations against the model
* Config + Threshold + Time

* Manually or automatically created
¢ Manual thresholding: “don’t alert until it happens 5 times”
* Automatically: “machine learning to identify anomalies”

* Baselines can be a form of modeling

If detection on some aspect of time
* “This baseline across time”
+ If just detection on “Newness” it’s Config Analysis

* Example:
‘DNP3 Warm Restart’ + 5 Occurrences > within 60 minutes

ICS515 | ICS Visibility, Detection, and Response

Modeling detections look for deviations from a configuration across time. This can be manually created or creating
using automatic methods such as machine learning. When you hear about products or approaches that need to “bake
in” or “tune” to the environment for their detections, there is some element of Modeling taking place.

The value of course with Modeling is you do not need to know what you are looking for and, depending on the
seriousness of the deviation or the environmental context, you might choose to triage some of these detections.
However, without context on how or why something is malicious, it can be a very time-intensive effort. Instead,
Modeling is best used proactively when you are proactively searching for things in your environment that are wrong
vs. triaging an alert.

As an example, I might be worried about adversaries experimenting with my RTUs ina Transmission substation
and could look for anomalous activity. I could do this through machine learning, or I could know that certain
Config alerts matter to me, like DNP3 warm restarts, and then set a threshold to look for more than 5 of them
occurring within a 60-minute period.

© 2021 Robert M. Lee 33
Technical elements that describe an adversary’s capabilities and infrastructure that are non-
native to the environment

Capability Examples: Metasploit CIP Module Detection

* Malware/hashes i .
. File paths alert tep any any -> any any (msg: Metasploit CIP CRASHCPU - possible
DoS"; flow:established,to_server; content:"|6f00|"; depth:2;

+ System modifications
content: |000000000200020000000000b2001200|"; offset:8;
46: 1 ",
Infrastructure Examples: depth:16; content: |52022006240103f00c000a0220022401| ;
. [P addresses distance:0; within:16; content: |£4£00909880401000100|";
« Doiains distance:0; within:10; threshold:type limit,track by_sre,count 1,seconds
+ Emails 86400; priority:1; sid:9000172; rev:1;)

Indicator: PowerShell Empire
Not-Indicator: PowerShell

ICS515 | ICS Visibility, Detection, and Response

quick ability to detect threats and scope your

Indicators are often fairly easy to create and implement, giving a
g an adversary’s

environment for known threats. The key component of an indicator is they are focused on detectin;
tructure. That doesn’t just mean IP addresses and malware. As an example, if an adversary is

capabilities or infras
that file path that is not native to your

creating a unique file path on your system to install their malicious capability,
system is a great indicator.

The key is that it is not native. As an example, an adversary could leverage PowerShell for malicious purposes, but
f the Configuration of that system. Looking for malicious use of PowerShell

it is a native Windows tool. It is part o
would be something you could create a Threat Behavior around instead. However, PowerShell Empire is a

PowerShell based tool that is not native to Windows systems, therefore looking for it would be an indicator.

In the example detection there is a CIP module in the popular pentesting Metasploit framework. That CIP.
CRASHSCPU module is something that can be searched for, and the content across the network (the bytes we’re

searching for) are a great indicator.
Indicators can be a False or True positive because it is asserting that the detection is accurately detecting a specific
thing. That specificity and the “this is true” assessment is what leads to having True and False positives (i.e., the

detection is correct or wrong).

34 © 2021 Robert M. Lee

ag’. @& @& &

nnnmneeaaef ®

ab
wey wy wy wy &

wow §& &6 & &@ Bw ww Ww ww ww w ww Ww

Threat Behaviors

* Events that are not specific to adversary capabilities and infrastructure
* Often includes native functionality/capabilities in the environment

Combination of events over a period of time with context on how they can be used maliciously or
have been in the past
* Indicators can be True or False Positives as they make assertions:
* “This IP address is malicious and associated with X Threat”
* Threat behaviors do not have True or False Positives
° “This behavior does exist, and it’s been abused in the past in these ways”

Can optionally include Configuration Analysis or Modeling alerts
+ Event 1+ Config Alert + Modeling Alert + Context = Threat Behavior
* Event 1+ Event 2 + Event 3 within 30 minutes + Context = Threat Behavior

Cannot include Indicators
* Event 1+ Config Alert + Indicator + Context = Indicator

ICS515 | ICS Visibility, Detection, and Response

Threat Behaviors are detections that are looking for adversary tactics and techniques. They do not search for
specific adversary capabilities and infrastructure, or they would be indicators. The detection logic is often looking
for a combination of events that can natively occur in the environment, such as Configuration or Modeling based
detections. That doesn’t mean they are just Configuration and Modeling detections with threat context. A Threat
Behavior is an analytic, a search across data for something specific, whereas Configuration and Modeling
detections often aren’t searching for something specific but alerting when those changes occur. A threat analytic by
its very nature is searching for something specific and contains the context of why you care. That makes it a
powerful form of transposable detection which should absolutely be triaged by analysts.

As an example, if an adversary installs a new file on a system, it connects out to an IP address, and then starts
scanning systems for OPC communications. That whole series of events could be a threat behavior. You are not
looking for what the specific file is or what the specific IP address is — you are looking for a combination of “new
file” + “new external IP address” + “OPC Scanning” across some time. That would represent the HA VEX behavior.
But importantly, it wouldn’t just catch HAVEX — it would detect that malware as well as any other malware family
leveraging that TTP.

Threat Behaviors cannot have True or False positives because it is not saying “this detection alerts on HAVEX” it is
saying “this detection alerts on behaviors leveraged by HAVEX”. It is not saying those behaviors are always
malicious and definitely does not state they are specific to one malware or adversary. Those behaviors might fire
for completely legitimate reasons, but they are still worth your inspection based on them being abused before for
malicious purposes. But the alert logic is correct that those behaviors exist, so there is no false or true positive
element to them.

© 2021 Robert M. Lee 35
Threat Behavior Example

+ The following detection looks for Triconex logic changes that do not update the logic versions

+ This is an action not specific to any adversary’s capability or infrastructure, it could be leveraged
by more than 1 adversary, it could even happen non-maliciously, but it has been seen leveraged

before maliciously

alert udp any any -> any 1502 (sid:9003281,; rev:2; msg:"Triconex Downloaded Change Without Project Version Update";
content:"|05 00|"; depth:2; content:"|01|"; depth:7; byte_extract:4,24,oldversion; byte_test:4,=,oldversion,32; priority:2;)

* Can also include the exploitation of vulnerabilities if the exploitation isn’t adversary specific

alert tcp any any -> any [135:139,445] (msg:"MS17-010 Shellcode Heap"; content:"|00 dO ff ff ff ff ff 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 cO f0 df ff cO fO df ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 60 00 00 00 00 00
00 00 00 00 00 00 00|"; threshold:type limit, track by_src, count 1, seconds 3600; priority:3; sid:9000036; rev:1;)

ICS515 | CS Visibility, Detection, and Response

In this example the detection is looking for Triconex safety system logic changes where the logic version is not
updated. Someone is changing the logic on the controller but not updating the versioning information. This could be
done as an accident by the operator or system, or this could be done by an adversary trying to change the logic
stealthily, as was observed in the TRISIS malware in 2017.

There is no new adversary capability or infrastructure being introduced to the environment that we are searching
for. We’re looking for events that have been abused before, or could be abused, and the context around them.

36 © 2021 Robert M. Lee

& &@ & @ &

ane? OGeee e @

anaonw an @ @&
oo Fe WS Ww WwW Ww ww wo ww we

oo ww

ry

+ Threat behavior analytics are the best way to achieve scalable detection of threats
with the context to inform defense and response
+ Work needs to be done prior to detection with intelligence

+ Configuration data is the best source of alerts for performing forensics to
understand what is going on in the environment

+ Use the threat behavior analytic to help narrow down what configuration data to
search through, such as a specific time period (+/- an hour from the detection)

+ Indicators of compromise (10Cs) are a horrible threat detection tool, but are
fantastic for scoping an incident or seeing how far a capability has reached
+ 10Cs made for your specific malware or adversary activity is ideal

+ Modeling can serve as an amazing amplification of threat detection, although it is

“ - not a good method to perform threat detection as a sole source
Amplification . Anomalies do not have the appropriate context to help defenders make choices, but
“an anomaly also occurred” can improve the accuracy of threat behavior analytics

ICS515 | ICS Visibility, Detection, and Response

Defenders need the context of what they are looking at, and what they should do with the information. It is
possible to achieve threat detection using any of the four approaches, but each can be incredibly ineffective and
inefficient if used incorrectly. Just because you are achieving success does not mean you are taking the right
approach to get there and spending resources wisely. Threat behavior analytics are the best form of threat
detection but require a lot of work up front. Modeling is one of the worst ways to do threat detection and requires
all the work to be done post-detection by the investigation team. If you have a threat behavior analytic that fires
on the network and “an anomaly also occurred in the data historian”, you can amplify the accuracy and relevancy
of the threat behavior analytic without even knowing what the anomaly was.

Indicators are largely abused, but they are fantastic scoping tools and can even be used in the forensic process.

However, the best forensic data is the raw data itself, or the configuration data from the time period when
something else was detected as potentially malicious.

© 2021 Robert M. Lee 37
MITRE ICS ATT&CK

Cnange Prog Sate

[Comrant ine teace Eipotalon ot Reva Surveas

sezison ean API sums amon Serves

craps ae ere Progen ogee es

Hom aimee Remete Fle Cony

reoran Ogaizabon Uns p20 Reptog Mec Sip Dicovery | aed decals

Pj ents,  izecnange Operating Mode [Sea Cam

[sree

iar Exess

ICS5I5 | ICS Visibility, Detection, and Response

Threat behaviors encompass tactics and techniques. MITRE has the Enterprise ATT&CK framework as a lexicon
and body of knowledge of public tactics and techniques associated with Enterprise threats. In 2020 they created ICS
ATT&CK for ICS-specific tactics and techniques. Many of the tactics and techniques were contributed from
Dragos, Inc. given the unique insight of their intelligence team. That means many of the threats we’ve already
covered in this course (ALLANITE, ELECTRUM, etc.) are already in MITRE ICS ATT&CK. After you complete
this course, as you look for use-cases of detection to make sure you have coverage, this is a very effective
framework to use.

It’s important to note that indicators, modeling, and configuration-based detections cannot map to ICS ATT&CK.
It’s possible to say, “we can detect X tactic”, which is true. A Snort “any any” rule could detect most attacks. But to
detect something means understanding it and its context, so that the defender has the right level of information to
act. Specifically in the context of ATT&CK it must be a threat behavior-based detection; i.e., tactic and technique,
not something specific to a given threat or malware.

MITRE ATT&CK and Threat Detections

In the broadest sense, you can achieve detections in a wide variety of ways. You could get a
Config/Modeling/Indicator/Threat Behavior based detection that coincides with a MITRE ATT&CK tactic or
technique. However, the whole point of tactics and techniques is not being specific to one adversary’s
capabilities/infrastructure and having the context to know what is malicious and why. Thus, Threat Behaviors are

the detection form that actually relate to MITRE ATT&CK.

When trying to achieve detections for MITRE ATT&CK you can leverage an overlay of threats to understand what
you care about specifically. The goal is not to have detections for everything, but a focus on what you care about

most.

38 © 2021 Robert M. Lee

& & @® @ © ®

ee &

ee F &

se A a ce

eooananqeganwamest & @ ®
oo 8 § © HW WH ewe weewwTeivewe we wo ww

vo §& & §& S&S YS VI

* Overlaying Activity Groups (e.g., threat groups) with MITRE ATT&CK for ICS
will show a scenario to emulate for red teaming/IR/detections

ESP ewe team att

Nie beni SB WHNTKD ND tide nado

ICS515 | ICS Visibility, Detection, and Response

Once you understand the scenarios you care most about (consequence-driven or intel-driven) you can chart out the
kill chain like view across MITRE ATT&CK for ICS. In this example, this is the Dragos navigator, which is a
public/free tool. It shows the different Activity Groups, or threat groups, tracked, and the observed
tactics/techniques they’ve performed. You can line this up with your hunting efforts and CMF to see if you have the
coverage in collection/detections for the scenarios you’re most concerned with. You can also use this for emulating
threats and planning out red team engagements, thinking through TTX’s and incident response playbooks, and
broadly various security efforts where understanding threat tactics and techniques are useful.

Reference:
https://www.dragos.com/mitre-attack-for-ics/

© 2021 Robert M. Lee 39
XENOTIME in Depth - Analytical Depth

PRIVILEGE ESCALATION

Choosing a specific scenario, e.g.,
XENOTIME’s compromise of safety

Peelomnn ecuabe systems, can guide what we focus on.

One detection for Engineering
Workstation Compromise wouldn’t be
sufficient. Detecting what occurred, but
then creating different variations of what
happened or could have happened would
give us numerous detections.

Multiple detections for the same
technique is the concept of Analytical
Depth.

Analytical Depth expands our ability to
catch the threat and similar others.

ICS515 | ICS Visibility, Detection, and Response

As an example, we will talk later in the course about XENOTIME, who conducted the TRISIS attack. This group is
selected on the overlay, and the Tactics and Techniques they leveraged for the first part of their kill chain are shown

in the graphic on the slide.

As an example, “Engineering Workstation Compromise” can be achieved in a number of different ways, depending
on the vendor/implementation/integration of the Engineering Workstation. Therefore, just creating a single
detection for “Engineering Workstation Compromise” would likely not be well suited against the different ways
adversaries can achieve their operations. It’s a good tool to communicate and track your focus, but a single
detection won’t cover all the different variations of this technique.

Therefore, we want to look at what the adversary specifically did in the scenario that’s informing us (in this case
XENOTIME) and start there with the detection. We should make reasonable adjustments on different ways it could
have occurred and maybe different product lines, protocols, etc. that are relevant. As such we will get a wide
variety of detections, but they all have the same focus/context to help guide us. This is the concept of Analytical

Depth.

40 © 2021 Robert M. Lee

”

® @ ®

7 © @ @ ®

am &

ean @
es <p Sw

ww

uo we SF OF HB HS HO HO Ww ww

XENOTIME in Depth - Analytical Breadth

LATERAL MOVEMENT COLLECTION

Creating
detections across
all the different
tactics and
techniques
leveraged by an
adversary gives us
Analytical Breadth

Breadth =
coverage of the
tactics/techniques
used

Depth = variations
on the way to
detect the same
tactic/technique

1CS515 | ICS Visibility, Detection, and Response

Achieving Analytical Breadth is found in getting coverage of a threat’s various tactics/techniques. In essence,
covering their full kill chain is breadth. Covering different ways that same tactic/technique can be detected would
be Depth. Achieving a combination of Analytical Breadth and Analytical Depth is the most effective way to have
coverage against the threat you care about, and future unknown threats that leverage similar tactics/techniques.

A very few set of good detections can cover a very wide set of malware families and threats.

© 2021 Robert M. Lee 4
Gaining Coverage and Identifying Gaps

ICS515 | ICS Visibility, Detection, and Response

Your goal should be to identify the threat behaviors (tactics and techniques) you can detect (through your own
methods or combined with your product purchases) and understand your gaps. You should constantly look to learn
from new intelligence and drive towards better detections. Often you can do this through hunting where you do not
have current detections, and then codifying lessons learned into stable detections.

I know this is not color in your books but the whole point here is being able to track at a high level the coverage you
have. It is best practice to consider A-B and A-D detections. A-B is analytical breadth (coverage across tactics and
techniques) and A-D is analytical depth (how many different detections do you have for the same tactic or
technique). You should look to have 1 detection to move something to yellow, and then look for 3+ detections
before considering something green. Red would be used for where you have nothing, and I would use blue where
something isn’t applicable to what you are doing. Importantly, given your different environments, equipment,
vendors, etc. you should consider mapping this to your Collection Management Framework, as it is unlikely all of
your infrastructure is going to have the same level of coverage across A-B and A-D detections.

Combined with a collection management framework, a proper intel-driven detection strategy can be a powerful tool

for defenders to know where they have coverage, where they have work to do, and to tie in efforts such as hunting,
incident response, and collection efforts that increase their defenses.

42 © 2021 Robert M. Lee

”

|

@

agecomwm @ ® @®

.° @ @ &,

oe Ge*e Ff Ff BSBA SG

we ww F&F ww w& Ww w&

wo

oe © & F&F §& F&F FEF ES

se SF »

i}

Threat Coverage (Kill Chain Coverage)

¢ You must understand your threat coverage
Trosting * Are all your detections focused on Stage 1 C2?
Delivery * You do not have to detect every adversary
aa action, every tool, etc.; you only need to
|

Install / Modify

accurately detect one of their phases
¢ Once one good detection is done, the

investigation starts, and you can identify
STAGE 2- ICS Attack everything else, including previously unknown

Develop

malware, tradecraft, and exploits
* The adversary doesn’t have to “just get one
thing right”—they have to get everything

Test
Deliver
Install / Modify

Exe cute CSAttack

1CS515 | ICS Visibility, Detection, and Response

It is important to understand what your detections are doing for you. Specifically, what are they detecting? Ensure
that you have detection across the entire ICS Cyber Kill Chain. Many organizations prioritize all their efforts on
command and control and Stage | Acts (can I detect exfiltration and communication out of my network). However,
adversaries can create novel techniques, tradecraft and capabilities for any given phase of the kill chain. It is
extremely difficult and statistically against the adversary to develop truly novel ways for every single phase. Many
adversaries use common tradecraft and then do something impressive somewhere in their kill chain. Yet if you
detect *any* of their phases, you can pivot to fully understand the full kill chain.

Use this to your advantage. Often, we hear that the adversary only has to get one thing right and defenders have to

get everything right. That’s simply not true. Defenders only have to accurately detect the adversary once in one
phase—the adversary has to go undetected on every action across all phases to be successful.

© 2021 Robert M. Lee 43
a ES SS SSS
Lab 3.1

Detecting Stage | Intrusions

Calistoga Refinery j

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

44 © 2021 Robert M. Lee

@ @ @ ®@ @ G G

wo @

oO

an fe ff @®

-

<>

@
es § & & bw Ww Bw Ww WwW weet eee we

vy

J

w

Course Scenario Goals (2)

¢ Calistoga Refinery
* What is the adversary’s IP address and domain?

192.41.148.220 and rckwel(dot)ru

ICS5I5 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee 45
Course Scenario Goals (3)

° Calistoga Refine:

«What is the name of the malicious project file?
* What did the adversary do to the safety PLC?

+ What is the malicious routine in the logic and what does it do?
* What is the root cause of the attack?

Is the incident connected to C3PO’s incident?

e CgPO:
* What is the malicious action on the HMI?

+ What Register was manipulated with what value?

* What malicious file executed on the HMI and when?

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

46 © 2021 Robert M. Lee

en ene oe OO & & & &

| 7
eo 8 8 © @ 8 Ww wo ww ww Ww wo wo BF wa Fs GF YY ww ©&

os w

Case Study: SANDWORM

BLACKENERGY?2 and BLACKENERGY3

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee

47
groups since 2007

exploits against SIMATIC,

BlackEnergy

* BlackEnergy is a piece of malware that has been used by cybercrime

* BlackEnergy was also used in distributed denial of service attacks
- A different group took BlackEnergy and upgraded it with new
capabilities thus deemed BlackEnergy2 and BlackEnergy:

* One of the capabilities added was { slackenersy DGS Bat J

a zero-day exploit that became ‘sew SE | reef Lae
identified as SANDWORM seats [io ouainanayi || mao |
‘ + = — =| SYN 10
Some versions of BlackEnergy2 oe 1 el
targeted ICS environments with SS i treats fF
Torfune Freqy [50

CIMPLICITY, and Advantech |

upP Size: [1000
si - || Ter size: [1000
SF Ps [0 (1-08 0- OFF)

1CS515 | ICS Visibility, Detection, and Response

BlackEnergy2 (BE2) and BlackRnergy3 (BE3) represent an interesting case study. It was a piece of traditional
cybercrime type malware even used in distributed denial of service (DDoS) attacks by those groups. However, it
was wrapped up into a toolset that became identified as BlackEnergy2 by an advanced persistent threat (APT).
There it was made more complex and was leveraged in espionage campaigns targeting various groups, including
NATO and defense contractors.

48

© 2021 Robert M. Lee

”

|

@

oe

oo § § JF OF ES SF VE EE FY SE SE FY OY we ww

oe J

se 8 & § SF

Sandworm Exploit

iSIGHT Partners identified a new zero-day exploit targeting all versions of
Windows from VistaSP2 to Windows 8.1

° The zero-day took advantage of OLE
Helped the company identify a cyber-espionage campaign linked to Russian
actors

iSIGHT’s report led Trend Micro to find a file communicating to one of the
identified Command and Control (C2) servers

* Config.bak which is a CIMPLICITY Server related file
Trend Micro’s identification of the ICS related file led iSIGHT analysts to look
for additional data around that indicator

* iSIGHT analysts then found files targeting Siemens systems

1CS515 | ICS Visibility, Detection, and Response

The Sandworm Exploit report by iSIGHT Partners (https://www.isightpartners.com/2014/10/cve-2014-4114/) led to
the identification of multiple C2 servers. Trend Micro analysts pivoted off of the C2 servers to find a file that had
been seen communicating to one of the IP addresses. The file was identified as config.bak, which is a type of file
that goes with GE’s CIMPLICITY SCADA software. From this the analysts were able to identify other files related
to the config.bak file, including files that were downloaded from the C2 server. These other files were additional
types of CIMPLICITY-related malicious files as well as non-CIMPLICITY related malware. The other files were
useful in identifying email addresses, follow-on files, C2 servers, and targets.

The work by the Trend Micro analysts off of the iSIGHT report allowed the iSIGHT analysts to revisit the data in a
follow-on report (http://www. isightpartners.com/2014/10/sandworm-team-targeting-scada-systems/) and identify
additional files such as CCProjectMgr.exe that were being used—which are related to SIMATIC and Siemens
WinCC software. This helped developed new indicators useful for analysts to identify infected systems.

© 2021 Robert M. Lee 49
Different Targets Different Approaches

« Word Documents
(PPT/Excel/Doc)

| Phishing
‘ +» Sandworm Exploit

Phishing emails
with PNG files

+ No infection just

notified read

« ICS Exploits for
Web Connected
HMIs

+ Spoofed Legitimate

ICS Files

1CS515 | ICS Visibility, Detection, and Response

It is abnormal to name a vulnerability, an exploit, and the group all after the same name, but that’s what happened
with SANDWORM. This can lead to some correlations that may not be accurate over time, such as all who usc this
exploit must be part of this group (not necessarily true). That being said, the various campaigns laid out by
SANDWORM were far reaching across lots of victims. Interestingly the approach of the adversary was different
depending on the type of victims. This could speak to multiple teams being present instead of one overarching

group.

When the group went after NATO and military targets, they were largely leveraging phishing emails with malicious
word documents exploiting a vulnerability. When the group started targeting critical infrastructure targets, there
was a tendency to do more reconnaissance in sending emails that wouldn’t infect the user but call back to let the
group know the email had been read. The direct exploitation (present in BlackEnergy2) was leveraged against ICS
networks where they could find HMIs that were hosted online, the files dropped on the system spoofed legitimate

Advantech, GE, and Siemens files.

While it is useful to look for everything if you have enough resources, with limited resources you should focus on
the tactics/techniques/capabilities being leveraged by the adversary against the victim that represented your
organization. There’s no reason to search for the phishing emails at first, if you are hunting in the ICS networks.

50 © 2021 Robert M. Lee

en) |)

nnn @ @ @

7?

~~

eee ee a a |
we wv 8§©§ Ob WwW we eee &

ss fF ww we

oso SF FS SF

The team known as Sandworm had a coordinated campaign across multiple years, targeting Russian-based interests
such as Ukraine, Poland, NATO, and organizations linked to analysis and preparation of military forces. This victim
analysis shows that the targets were not of interest for cyber-crime-type-based groups, but more aligned with
national interests.

This type of view is highly dependent on collection and finding additional collection sources could invalidate the
strong targeting focus, but that was not done here. From what we know SANDWORM was fairly targeted on
critical infrastructure and military targets. Across 2012-2014 there was a very strong focus on electric and energy
targets.

Image Reference:
iSight Partners (now Mandiant)

© 2021 Robert M. Lee 51
BlackEnergy2 and 3 ICS Cyber Kill Chain

a @

S)
:

+O
|
J

ro)

Act ©)

STAGE 2 - ICS Attack “|

Develop

Deliver )

Install / Modify

OC
Execute ICS Attack )

}

Attack with Impact

Here we see that in both BE2 and BE3, there was never an attack capability. It was simply an espionage toolkit.
This led to a lot of early confusion around the Ukraine Cyber Attack. News reports indicated that “BlackEnergy
caused the power outage” which is not true. It enabled the adversaries to get access to the environment, but the
malware did not cause the power to go out. BE2 and BE3 kill chain analysis prior to the incident could have helped
alleviate the confusion. BlackEnergy2/3 could technically be used to get access directly into the ICS, especially
BE2, and thus represent the start of the Develop phase of an ICS attack. But they themselves contained no
destructive or disruptive capabilities for electric power.

52 © 2021 Robert M. Lee

”

aonmaeaeegKssks#e#egses#eeee

f @ ~~ Bi] ao Bi] o a mm,

ce
oso ws FO JF FSF FSF SF SF S&F HF HF WD

ICS Network
Security Monitoring

ICS$515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee

53
Network Security Monitoring

* Network security monitoring (NSM) is a continual process to collect, detect,

and analyze indications of threats for the purpose of responding:
¢ Threat-centric approach versus traditional vulnerability-centric
« Assumes that at some point the network will be compromised
¢ Continual monitoring of the network for security incidents
¢ One approach to hunting

¢ Limitations:
* Requires dedicated analysts
¢ Requires preparation of infrastructure and tools ahead of time

« Advantages:
* Proactive approach to security and detection of threats
* Enables analysts to help guide defense and architecture teams

ICS515 | ICS Visibility, Detection, and Response

NSM was largely influenced by the U.S. military and the desire to look for early warnings and indications that
malicious activity is taking place on a network. In traditional IT security, there is a vulnerability-centric approach
to security—find vulnerabilities, close them, and wait for new ones. This aspect of limiting vulnerabilities is
important, as we saw in the previous section. However, building off of that, NSM focuses on a threat-centric
assessment. With network knowledge and a reduced threat landscape, how do you patrol your network to look for
threats? NSM is a continuous process that understands prevention will fail at some point. In this process, you need
to recognize that this is not your basic information security practice. You need trained and dedicated analysts
performing NSM. It is not a part-time job and should not be assigned as an additional duty. Another limitation of
NSM is that you must have the ability to prepare your infrastructure and tools ahead of time. If you cannot work
with the architecture team to establish points to monitor and get tools approved, you will have a difficult time
performing NSM.

The advantages of NSM are numerous. The chief among these advantages is that NSM provides a proactive
approach to security and the detection of threats. Instead of simply waiting to be told that your systems are
infected, this process enables security teams to identify advanced and targeted actors inside the network. the goal
is to identify and mitigate the threat before the group accomplishes its mission. NSM, combined with threat
intelligence, can identify threats that are probing your networks before they gain access. This allows for proactive
defense measures to be taken to prevent access to the adversary.

This process is about collecting the right data, analyzing it, and detecting threats. It should lead into an incident
response approach when a threat is found and determined to be a situation that requires elevation.

No discussion on NSM would be complete without mentioning some of the people who have championed it over
the years. The following are three great books on this subject:

The Tao of Network Security Monitoring: Beyond Intrusion Detection by Richard Bejtlich

The Tao of Network Security Monitoring by Richard Bejtlich
Applied Network Security Monitoring by Chris Sanders and Jason Smith

54 © 2021 Robert M. Lee

@

oe @ GF GW GT SG SC GS

oe @ @ @ @ @ @ @ @ © @O @ D @P
we

as yw

oe 4

wo we

oF Fe ww ww

ss 8 SF SB

NSM Process in Active Defense

Utilize knowledge of the
network to drive collection.

Utilize threat intelligence
to influence detection.

False
(False Positive or
Below Threshold)
True Threat
os

ICS515 | ICS Visibility, Detection, and Response

NSM is not just about finding intrusions; it's about monitoring your network. Anything from configuration issues to
policy violations can all be issues that NSM illuminates. When an event doesn't need to be escalated to an incident,
it can still be used for action when working with defense and architecture teams or management. These events help
grow the network's defenses as well as the skill of the analysts.

The visibility through NSM enables you to:

¢ Identify changes from normal or anticipated behaviors.

¢ Enforce change control and policy.

¢ Rapidly troubleshoot misconfigurations.

* Detect attempts to intrude upon and move around ICS/SCADA systems.
¢ Illuminate potential attack paths.

Productivity improvements come from monitoring and baselining known good system behavior by:

¢ Reducing turnaround time (quicker validation and return to known good operational state).

¢ Reducing system troubleshooting time.

* Reducing change and configuration problems and catching errors/misconfigurations quickly before they can
impact the process or operations.

NSM is used to optimize your system by:
* Refining segregation and enforcement zones for control networks.
* Quickly generating and validating firewall rules.

* Reducing (thereby hardening) nonrequired ports and services and characterizing changes in system
communications.

© 2021 Robert M. Lee 55
NSM Data Types

Full Content
+» Complete traffic (peap)

+ Network and system level
alerts such as event logs °

ICS515 | ICS Visibility, Detection, and Response

Data can be thought of as information that has not been analyzed. As we talked about in Section 1, analyzed data
becomes intelligence. In the Collection phase of NSM, we are highly interested in getting as much of the right data
as we can. What this means is that if a security person is responsible for the supervisory network, he will want to
collect data flowing between the HMI and PLCs. This person is likely not as concerned with the network traffic on
the corporate network, unless it directly interacts with the supervisory network. More data can mean more
problems. Collecting the right data allows analysts to focus without drowning in more data than they can process. If
you have thoughts of Big Data, go ahead and throw that out the window. You want targeted data of likely value.

Full Content
This type of data is the complete packet capture of network data. For example, if you take full packet captures of

data between process controllers, that is full content data, whether it is serial-based or Ethernet-based.

Metadata
Metadata is data about data. Metadata can be thought of as information such as the Modified Access Created

(MAC) information on files. Timestamps, the type of OS, and even the type of hardware traffic originated are
metadata.

Session/Flow Data
Session and flow data represent how the network traffic is moving. Determining what device sent traffic and what

device received it would be considered session and flow data. It is technically data about data, but this is a more
specific type of metadata that is worth identifying.

Historical/Statistical Data
A high-level view of network data can be beneficial in understanding the utilization of network resources, such as

bandwidth and expected latency. Deviations from this type of data can reveal events on the network worth looking
into. For example, if you have a Modbus client that has approximately 100 reads an hour and that spikes to 400, that

would be cause to look into the traffic more fully.

56 © 2021 Robert M. Lee

= 7 ® ® © ® ® ® ®@ ® ® ® © &

”?) ™ ” ™@)

oeuwvewbwvwbwe

a

ve vb

owe s§& &§ &

Alerts
Alerts are valuable sources of data that identify an event on the network. These events could be failed logins,
antivirus alerts, or logs of blocked traffic at a firewall. Although the defense team should be concerned with these

events primarily, the ability to correlate alerts across the entire network and add context to the network environment
is an NSM role fitting of an active defense analyst.

© 2021 Robert M. Lee 57
NSM Applied to ICS

+ NSMisa strategy independent of asset type (IT versus OT)
* Inavulnerability-rich environment, NSM excels:

+ NSM is especially useful in an ICS environment due to equipment that cannot be immediately (or
ever) patched

° Traditional IT defenses are not always suitable to ICS environments

¢ ICS networks have many dependencies and
connections:

* Vendor connections, government monitoring,
business applications, enterprise networks,
contractor VPNs, and so on

¢ NSM does not assume security in these

connections/dependencies

ICS515 | ICS Visibility, Detection, and Response

NSM is not technology-dependent. It does not matter if we are talking about ICS or IT systems for the process of
NSM. However, the way NSM is conducted is dependent upon the type of systems you are working on. The NSM
process of Collect, Detect, and Analyze goes beyond the type of systems in use. However, in each step, there are
considerations for ICS and active defense. For example, the traditional NSM Analysis phase would conduct
malware analysis and host forensics. In the active defense cycle, these steps are moved to the Incident Response
and Threat Triage steps. This is due to the sensitivity of some ICS networks and to further separate out tasks, so
that network security teams can specialize in an appropriate way for advanced attackers. In ICS, the NSM team
should collect information, detect security events in that data, and analyze it to determine whether there is a true
threat worthy of incident response. Dedicated resources for malware analysts are outside the scope of this process
and likely outside the budget for a dedicated ICS security team.

Because traditional IT defenses are not always suitable in ICS environments and because there are many assets
that simply cannot be secured, NSM is a highly effective strategy for ICS. NSM is a strong IT practice, but it
excels in the ICS environment. The dependencies and connections that ICS relies on also provide ample
opportunity for areas that should be monitored.

One consideration is that traditional NSM does not often concern itself with data collected from systems such as
process controllers. The data historian that collects information about your process should be considered a
valuable resource for determining if there are odd events occurring on a network. Frequency rates, turbine speeds,
pressure levels, and so on are not normal data types for NSM, but they should be monitored in ICS NSM.

58 © 2021 Robert M. Lee

7 7 @ @ GT ® B® GB BD @&

em @ @

eo oe mm &@

ef ff ©&
ewes we Ww ww Ww ww @

- ao ap as as a we 8 § FF SF US Ww

“

Preparing for an Active Defense

Design :
« Hardware design * ¢ Integration test
signment * Configuration ¢ Functional test
* Control ¢ Shipments ¢ Load testing
configurations ¢ Commissioning

ICS515 | [CS Visibility, Detection, and Response

The design to commissioning life cycle is important when planning for an active defense because it provides process
and equipment-specific information that supports risk analysis and security schemes, such as ICS network
monitoring. The FAT and SAT are windows where the end user can request and document how the ICS is
configured and determine a baseline for required and expected communications. Integration efforts and final
configurations can be determined (most restrictive yet functional is recommended) and validated before system
operations. The "as built" view can help you devise your strategy, but "as operated" needs to be determined. (We
know that things begin to change post commissioning.)

Procurement

Equipment refreshes are cost-prohibitive; therefore, procurement language is important for managing risk. DHS
provides guidance on procurement specifications to mitigate the basic system specification issues. References are
made to specific timing of deliverable information. All language is agreed upon pre-contract award; proprietary or
business sensitive information will be delivered after the contract is signed (post-contract award).

Factory Acceptance Test

The Factory Acceptance Test (FAT) is necessary to verify that security features function properly and provide the
expected levels of functionality. Each topic includes FAT tasks specific to that topic. In general, prior to initiation of
each FAT, the vendor shall install all operating systems and application patches, service packs, or other updates
certified for use with the provided system by the time of the test, and documentation of the configuration baseline.
FAT is a process, not an event, and could extend over several weeks or months. Ensure appropriate security controls
exist at this phase, as it can be common for controls to be bypassed in efforts to "get the system working". Confirm
file-level security controls exist for data being introduced or taken off of the system, and make sure Internet /
external network connectivity is well understood and controlled. Also ensure that appropriate change and
configuration control practices are followed.

Site Acceptance Test

The asset Purchaser's Site Acceptance Test (SAT) typically repeats a subset of a FAT after system installation with
additional integrated functions. Typically, the SAT is performed before the cutover or commissioning to validate
that the site installation is equivalent to the system tested at the factory. Like the FAT, the SAT may extend several
weeks or months and may occur at multiple locations.

© 2021 Robert M. Lee 59
Infrastructure Preparation

° Value:
+ First, prepare the infrastructure and identify sources of data
* Enables full access to the right data
° Sources:
« Network tap placed inline to duplicate and capture traffic
+ Enable SPAN/Mirror port on a network switch as well as flow data
* Firewall/Event Logs
* Data historian for process data
° Methodology:
* Determine the most critical areas followed by the most
vulnerable; collect there first

ICS515 | ICSVisibility, Detection, and Response

Preparing infrastructure seems a bit out of place for an active defender. Ideally, your architecture team should be
more than capable of doing this. Yet, if you do not communicate your needs to the architecture personnel, they will
not likely know where or why you want access points into the network to collect data.

Preparing the infrastructure requires you to identify the type of data you want to collect. If you are looking for full-
content data, you are going to need to put a SPAN/mirrored port on a managed switch and collect traffic from it
using tools such as TCPdump or Wireshark. If you want Alert data, you need to have access to firewalls and event
logs. Everything on the network should be evaluated to determine if it has useful data for your needs, so you can
determine the best way to get that data.

Quick tips:

* Ona network switch, remember that only managed switches can be set to have a SPAN/mirror port. In
addition, be careful about how much throughput your port can handle compared to the amount of network
traffic you have. If you have a 1GB port and you are mirroring 2GB of traffic to it, you will be losing one-
half of your data collection. You can have more than one mirrored port.

* One of the best tools to collect network traffic is with TCPdump because it consumes less resources than
Wireshark; we’ll discuss it later.

* Network switches often have flow data of value such as the IPFIX standard.

° Hubs get the "purest" data. Network switches often discard poorly formed packets or any errors. Hubs
capture that data so that you can determine why the packets are malformed.

Switch SPAN/Mirror Port

So far in the class, we've talked about a few things that take advantage of a network switch's SPAN or mirrored
port. The two terms are often used interchangeably. The original use of SPAN was for Cisco switches specifically.
Preparing a mirrored port on managed switches in your infrastructure will allow you to passively and safely collect
network traffic without increasing latency or bandwidth. The mirrored port simply mirrors all the other ports to it. If
the port receives more data than its throughput, it will drop the traffic without the other ports being affected.

60 © 2021 Robert M. Lee

omm@m @

)

iY

ae we Oo oo om LD

ar

a A TS |
oe WV WV ueuew wewweweeweewe &

ue &

Each vendor has a different method of enabling the mirrored port, but it is generally the same process. Access the
managed switch through a management prompt either in the command-line interface or the GUI, and give the
command, or select the option to mirror a port.

For example, a Cisco 3000 switch's commands to mirror a port from the CLI are:

* (Set Source Port) # monitor session 1 source interface gigabitethernet1/1 both
¢ (Set Destination Port) # monitor session 1 destination interface gigabitethernet1/2 encapsulation replicate
* (Verify) # show monitor session |

When the mirrored port is enabled, it can be used to send traffic to a designated location. One methodology is to use
a network storage device to collect the traffic. Another approach is to use a laptop with TCPdump (discussed in a
few slides) to collect the traffic. A network storage device is a better solution when able and multiple TB storage is
relatively inexpensive (a few hundred dollars for a few TB). It has plenty of space to store traffic in a moderate-
sized ICS environment. Ensure that you check how much network traffic you are capturing and how quickly you
expect to fill up your storage.

Network Tap

A network tap will mirror the full-duplex traffic that traverses the tap and will typically forward the captured
streams on to a monitoring device or capture system as two different half-duplex streams. One is for transmit and
the other is for receive. This requires ihe capture device to have two network interface cards and the monitoring
software capability to combine the two streams for analysis. Tap devices exist that perform the data stream
aggregation and allow for a monitoring device with a single network interface card and direct analysis capability
from a software perspective.

It should be noted that hubs can be used to see the communication between two devices; however, hubs can cause
bandwidth issues and are not recommended in an ICS environment.

Network Tap Value

In many ICS environments, the switches that are deployed may or may not allow port spanning/mirroring. In
addition, even those managed switches that support spanning/mirroring may allow for only a limited number of
ports to be monitored at a given time. Consideration needs to be given to the switch backplane throughput
capability; as you enable spanning/mirroring, you can impact switch throughput capability. Utilizing
spanning/mirroring is becoming more commonplace in new system deployments; however, it is also important to
note that CRC errors will be discarded usually from routing, so a span/mirror port will not see it, but a network tap
will collect it.

Data Historian Process Data

Data historians contain valuable historical and statistical data for collection. Detection of deviations and anomalies
can be used to gain a better understanding of the threat and the scope of an infection. If the data historian values and
set points have recently changed after an infection, it is a good indication that the process control systems might
have been impacted.

Although data historians are often different from each other in a variety of ways, they are all usually some type of
database. As a good methodology, retrieve the process data to securely store it. This can be done through export
commands native to the tool or in making selected queries. Syncing up this data collection with a collection tool
such as a SIEM (SIEMs is discussed later) can give a more holistic view into operations. In addition, this value can
help digital forensics and incident response teams.

Firewall/Event Logs

For NSM, the collection of firewall and event logs can paint a better picture about what is going on in a network.
For example, in an oil refinery, users found that many of their accounts were being locked out. There were no IDS
or security type systems in place to give any more information, and there were no pre-established accesses into the
network to have good collection of data such as full content. The refinery called in an outside security team at

© 2021 Robert M. Lee 61
a hefty price to figure out what was going on after numerous process controllers crashed. The security team quickly
identified that the cause for the problem was the Conficker worm. This untargeted threat caused serious financial
and business costs to the refinery. A number of defensive measures, such as patching the Windows systems, could
have prevented this accidental infection. These defensive measures are focused on prevention. An NSM team could
have quickly identified this issue by looking at the number of Windows event logs that were issued for failed logins.

Event logs can be taken remotely off of systems, but for NSM it is often best to automate this process. Later, we
discuss SIEM systems and log aggregators that can help with this. For firewalls, though, their logs will be
incomplete if proper zoning and network segmentation isn't accomplished. The chokepoints are effective for
collection here because the various outside connections into your environment have to pass through network

firewalls.

In addition, you can perform Deep Packet Inspection (DPI) or full packet inspection to inspect the traffic to
determine whether there are any abuses taking place at the protocol level. Tofino firewalls are a great example of an
ICS device-level firewall that can inspect ICS protocols to identify and block malicious or malformed traffic. Logs
of what traffic is blocked (and when correlated with other events) on the network will ensure a better situational

awareness of your environment.

IDS can capture data, such as packet captures related to an event; it doesn't have to be threat-related. This is
discussed in the next section.

Windows Event Logs
Event logs are specific to Windows systems and are a special type of log that stores relevant information about

various events on a system. Application events, as an example, identify warnings, errors, and information about
programs, including when they started and crashed. Security related events identify especially interesting activity,
such as failed or successful logins. Setup events are related specifically to domain controllers. System events are
similar to Application events, but specific to the Windows system services. Forwarded events are those event logs

forwarded to a central location.

Event logs can be forwarded from all Windows systems after Windows XP Service Pack 2. Logs should not be
stored on the individual system because of adversary anti-forensic techniques. Shipping logs to a central location
helps for the analysis of those events and the secure storage and management of them.

References:
https://support.microsoft.com/en-us/hub/43 38813/windows-help?0s=windows- | 0#1TC=windows-7

Image source:
http://blogs.technet.com/b/wincat/archive/2008/08/ 1 I/quick-and-dirty-large-scale-eventing-for-windows.aspx

62 © 2021 Robert M. Lee

@ @) @) QQ r) 0 @) @ ®) i/o

o of @ ® @ @® DM WD

@

“>
je | 8§& §& §& S&F FSF §F& HF HF HF HF WT YF W

Process A Process B
Redundant Operator Office Redundant
Control Servers PC Date Historian Engineering Control Servers

Workstation

Process & HMI

Machine pressure Process
| contrsiter jlodem
Controtier "Soncor

sensor actuator

Computer

fodem

Motor | Remote Access:
Solenoid

ICS515 | ICS Visibility, Detection, and Response

Attackers love to find flat networks. Flat networks make it incredibly easy for attackers to use credentials and
information gathered from one part of the network throughout the entire network. Simple ARP spoof styled attacks
become incredibly powerful to an adversary that finds a network without proper network segmentation. Flat
networks are also difficult to monitor from a defense perspective, which reassures attackers that if they find a
network like this, the defenders probably aren't even looking.

When considering an active defense, this type of network presents a problem. Networks that are not properly
segmented and do not have managed network infrastructure, such as network switches that can enable a mirrored
port, present few opportunities for defenders to collect meaningful data. Proper Architecture helps aid in security by
limiting adversary effectiveness upon initial compromise and buying the defenders time to detect the attack but
provides an essential foundation for active defense mechanisms.

© 2021 Robert M. Lee 63
Separation Is Key!

Data
Historian

Process A
Redungant

Control Serv niginsenet
ont 3 process A HMI Engineacing:
Workstation

Process A

Machine

Prose:
Controller iio

Sensor

Motor
Pressure
Solenoid Motor 9
Valve
can

Operator Office

Redundant

Engineering Control Servers

Workstation

| Pracoss B
| controller

|

| |

| |
J Presmu

Process 8 HMI

Singiq Lone
Modem “‘contiotier

Sada
feonsor ectustor

Comparer

hy)

®@ @ @®

@ @

dd od ed Sd |

Physical and logical separation in networks makes it more difficult for adversaries to pivot throughout your
network, while offering you defensible locations and chokepoints to monitor the flow of network traffic.
Chokepoints and network monitoring will be discussed later in this section, but it is important to note the difference
between this and the previous slide. There is order to this network architecture, and even from a visualization
perspective alone, it appears easier to defend and manage. It is also much easier to identify assets on the network

when segmentation and separation are done properly.

64 © 2021 Robert M. Lee

7 oO © OW OD DW ®

tL ee TT]

aa fe
woe wee www ee

oo vw F&F ww wo Ue YE Ww WwW

ICS Data Collection

* Map for technology:

* Identify who manages infrastructure and control system assets
* Map for business processes:

* Look for business processes that use control systems

* Deploy monitoring endpoints on the internal side of all outbound network links

to passively identify ICS assets, threats, and critical information

Create
” Chokepoints

ICS515 | ICS Visibility, Detection, and Response

After asset and network identification is performed and verified against existing architecture documents, the
network must be monitored to determine issues. Network security monitoring is nearly impossible without
understanding the architecture. The first step of NSM is collection.

Data collection is required to evaluate it for threats and security-related events. Firewalls, IDS, OPC servers, and
SPAN/mirror ports are useful as collection sources. We go over these in the following slides.

Ensure that you are working with the network architecture team to create chokepoints. A chokepoint is essentially
an intended bottleneck on your network that does not limit bandwidth or cause latency. For example, if multiple
assets on your network require remote connections, a chokepoint would be a single access point for the various
remote connections. Users would connect to this access point and then connect to the device they need. Instead of
having multiple points to collect traffic, you now have the single chokepoint. This is another reason network
segmentation is so important. When a network is segmented correctly, there will be a number of naturally forming
chokepoints. These connections between networks can be vital collection points for data. In these chokepoints, it is
also beneficial to deploy systems that can be used to alert on threats, such as firewalls and IDS. Communicate needs
effectively to IT personnel, because they are often skilled with traditional defenses and establishing such
chokepoints.

It is more important to have the right data than all the data. Identify and collect from critical network segments,
chokepoints, and data from critical assets.

Have you watched the movie 300? In the movie, the Spartans must face legions of Persian fighters. However, there
are only 300 Spartans. In an open field, they would quickly be defeated by the Persian armies. To counter this,
Leonidas, the Spartan king, positioned his 300 warriors at a passage between two mountains. This natural passage
ensured that the Spartans had to fight only a limited amount of Persians at one time. They created a chokepoint.
Network defenders must be adept at using their infrastructure to enable protection against the vast legion of threats
(not necessarily Persians).

© 2021 Robert M. Lee 65
Prime spots for collection include:

e Internet

¢ Enterprise

* Business operations
¢ Supervisory control
* Gateways

¢ Fieldbus

Identifying ICS Hotspots
Identifying points that can be considered hotspots in the ICS are important for determining what collection points

should be established first. Hotspots can be thought of as places where a lot of operations occur, or where network
threats are likely to find a way in. There are two main methodologies for finding hotspots: map for technology or

map for business processes.

Map for Technology
Identify who manages the infrastructure and control system assets. The people who manage the infrastructure likely

have remote abilities throughout the network, as well as tools set up to help them. These privileged accesses into the
network are good hotspots to attempt collection from.

Map for Business Processes
Business processes that get information from control systems and ICS assets, such as a data historian, are likely to

be points in and out of your network. In a well-structured network, business processes can access the data they need
off of the ICS through a DMZ, which serves as great hotspot.

Chokepoints refer to the network paths themselves, whereas hotspots occur where a lot of activity is going on and
threats can be introduced. Hotspots can exist at chokepoints, but they might not exist there. However, working with
the architecture team to align hotspots and chokepoints can make collection much easier.

66 © 2021 Robert M. Lee

oS

om © @® D® ® ®@ GD GD

am ™

oe.

~e . eo

<>

ol ee et le il eof el
woe ws FF FTF ow we &

af oe 8 ©8© 8§ 8 FS 8S TF EF TP PF SE we Ww

lorth/South vs. East/West Traffic Analysis

° North/South traffic analysis is an
easy starting point but often lacks

ICS context and insights
* Use-Case: Identify beaconing out of
operations and malicious domains
* Use-Case: Identify cross-site traffic

° East/West traffic analysis is
required in ICS networks because
most of the comms between
Supervisory and Control

equipment happens here
* Use-Case: Asset identification and
protocol analysis
* Use-Case: Adversary lateral movement
and manipulation of control systems

peer North/South = What crosses boundaries e.g.,
in and out of the L3 Firewall
Process A —

Redundant Operator Office Redundant

Control Servers : Data Histonan Engineering — Conitol Servers

Process A HMI "
Wuhsimton: Process 8 HMI

Machine secure Process 8 8
Controle, “eeSt Sontiotles Modem

‘Sensor East /
mm ‘a West =

. Internal H

Motor © Temata Reese
; a comms | = Ren
Seneit Regulator -

ICS515 | ICS Visibility, Detection, and Response

When coordinating collection or deploying detection tools it is very common for plant personnel to want the
detection efforts to sit outside the plant/substation/operations site. This means it would sit outside the Firewall, or
just analyze traffic in front of or behind the firewall for North/South communications. There is value in North/South
communications, such as indicator checking, cross-site traffic, and identifying the type of connections going in and
out of the operations site. However, there are a lot of communications you will miss, especially most things of ICS
value and the OEM/integrator VPNs/connections will likely be obfuscated to you.

East/West traffic analysis requires you building trust with the operations staff. Whenever possible, it should be
deployed in a completely passive function, not actively dropping communications or performing any prevention
function. In the East/West configuration, you will see the ICS communications/protocols and be able to identify
assets and vulnerabilities. More importantly, all of the “interesting” adversary actions, such as lateral movement,
logic changes, control manipulation, etc., will be available for detection.

© 2021 Robert M. Lee 67
Case Study: Gas Storage/Distribution Data Collection

Doman Convaker

_ 1B

Motor Tower ©
reer

i i

' F

i r
' i
‘ i i
i | Loe Tower
| Meter ower ter | ie sat spese
| oraens i ees
} !

! :

i

|

i

i !

i d

I

' :
| I

I i

I

'

I

I

!

Over this and the next two slides, let’s consider a gas distribution and storage operation. It is a fairly modern gas
distribution and storage setup, including the use of virtualized environments (VMWare based). It’s using
FactoryTalk management software and Bristol RTUs with Cisco switches.

The purpose of this slide is not to detail the equipment and tower information, so do not waste time squinting to
identify the names. Instead, think about the layout overall. There is a corporate network that connects into the
control center. This control center is separated from the Corporate Network through a firewall. There are multiple
managed Cisco switches, including an internal switch, as well as the DMZ switch near the firewall.

The Cisco switch internally would be ideal to gather data from a mirrored port about the activity on the network.
Since there is a virtual environment, there is likely an option to also set up a virtual mirrored port and ensure we are
capturing all possible data.

Next, it would be important to identify what is traversing through the DMZ, so a monitoring location could be set
up there or directly off the Firewall. Seeing what is hitting the external Firewall on the way to Corporate could be
important but is likely something that IT could be monitoring. OT would need insight into it if not monitoring
directly (identifying failed connections is as important sometimes as the successful ones).

As we move down, notice that there are two devices the Site A tower is talking to. Those are modems that the tower
is communicating back into, through the Firewall, and then back onto the network. That’s a great design (having the
modems’ communication come through a Firewall and through the DMZ before hitting the network). That means
that a monitoring point in the DMZ itself is not only collecting from the control center into the corporate network
but would also collect Site A tower into the control center.

Monitoring at each location is going to likely be improbable for an organization. A collection mechanism at each
Meter Tower is usually not going to be possible. However, if there are mirrored switches at those environments a

68 © 2021 Robert M. Lee

ta

@ @W @
/

oem OO. OD DD OD HD ® WH BW @W

a Om @

?
“as

2a «aw «45

small collection device could be deployed, summarize flow data, and send the lightweight flow data back through
the normal communication path to the control center’s security team. In the very likely case there is not
managed/mirrored switches there, it is preferable to get a collection agent on the hosts, such as a log collector, or
just forward Windows Logs or Syslogs to a server in the control center. At worst, by monitoring what is coming
through Site A’s tower into the location, we can at least see what is coming and going out to the Meter Towers.

Additionally, all the information covered in the slide graphic could also be repeated at Site B. Notice, though, that
Site B is much smaller in scale. Ideally, collection would be done off of the managed switch internal to the
environment and forwarded back to a log and network aggregation tool for the control center’s security team.

Shown in the slide graphic, the monitoring stations and tools could easily be Security Onion and has been in
multiple sites around the community.

FYI Details:
* Site A has 12 compressor sites and Site B has 1.
* The billing and metering data are pulled from the metering sites once a day at 10 a.m.

* Ifmanual collection is needed, each metering site has a 30-day capacity (but manual collection is not ideal).
* Each tower has around a dozen wireless drops to meters.

© 2021 Robert M. Lee 69
VLAN 109 / 172.16.19.0/24
IT Clients (Virtual Desktops)
GW: 172.16.19.1

VLAN 200 / 172.16.20.0/24
Net Services (Virtual IT Servers) fesnztexae
GW: 172.16.20.1 —

VLAN 201 / 172.16.21.0/24 oe mn: gaa eeetttomnes
App Services (Virtual SCADA Servers) | Mosuarece
GW: 172.16.21.1

VLAN 202 / 172.16.22.0/24 mia
EWS (Virtual Engineering Desktops) a
GW: 172.16.22.1 os

trasssans

Ga: mats

VLAN 203 / 172.16.23.0/24 : —_ - easass0c
OWS (Virtual Operator Desktops) : ane Ore raat

sresen24i08

bee
VLAN 300 / 172.16.30.0/24 ete
Zero Clients (Wyse Thin Clients oeiee sroasssens
)GW: 172.16.30.1 . Greramaae

VLAN 301 / 172.16.31.0/24 .
Instrumentation Laptops sures soane
GW: 172.16.31.1 4 one eats

YUAN 404 1 47218.18.028

‘A viltion S,
VLAN 400 / 172.16.40.0/24 aeitons s fsa
cx Gateway {ControiLogix Gateway) | — SwoetDt
2172.16. wat

Case Study: Gas Pipeline L2 and L3

Drilling into the gas pipeline’s network a bit more, we can see the logical architecture of the network. The box
that’s expanded out shows that the equipment is assigned into VLANs by its functionality and given a set IP range.
This makes asset identification obtainable by having an easily referenceable architecture. With the equipment
separated out by VLANs, we can additionally collect traffic from specific VLANs at the managed switch to be able
to create baselines for the most important segments (such as the SCADA servers, operator desktops, and control
gateways). Each one of the VLANs could be a zone we create in our asset inventory to monitor and understand the
ports, data flows, and protocols on the network.

This type of setup is not easy to obtain, but there have been multiple ICS locations around the community that have
successfully gotten their ICS into this type of well-planned configuration, even after the operations were already up
and running. This is all an aspect of the Architecture phase of the Sliding Scale of Cyber Security. Here, we can see
how good Architecture would make Passive Defense and Active Defense much more accessible and less costly.

In Section 3’s material, collecting from virtual environments’ hosts will be covered more in depth during the
incident response discussion.

70 © 2021 Robert M. Lee

eo @D @® QD &

Oo DB

»> >» ® ® ®&

2)

ce .S

=
w VV Vw Ww &

we we ws

ed

as

Serial Protocols

¢ Serial protocols are still present in many ICS
at Level 0 and Level 1 of the Purdue Model Sosa tat lS
Common protocols include: |@ FOO 1s me | myat1!®
Modbus RTU TN ATES
01 10 3300 00 08 ce gh

| OC
DNP | Jo0 01 Se bo & Gi OTE “Watt

|

|

|

Ld 104-02 00 OF £9 34 ¥
DF1 * ae

33 J04 32 0300 be OE
TEC60870-5-101
IEC50870-5-103
Emerson ROC
CC-Link
PROFIBUS |

Weigh the pros and cons of analysis here = ee Stat SR

¢ Difficult and time consuming to collect | uaaaaataaaanaaes

ore Soke
® P0104 1¢0301 00.89 Oce RA

9 OTE

01 07 00'00'63. 1900:00:03.13 00:00 00:00 00.00 Oce MANE,
6  % 01 10 3300 OTE Lata
190 G0 60 00 00 00.00 00 73.af DCE Wie’
00 82 02 UG G1 65 db pre "Wines

® P 01.10 330800 01 Bf ocE RPA

W 01 04 32 00:00 01 32 72 OTE Mee Wee

at ® P 01 0402 oce 9
fe P Of 04 32 01 06 01 Se bz

& MOLOs 02 0008 F934

* No adversaries observed utilizing serial 60 be ue 76
* IT/OT convergence is driving more IT threats
Recommendation:
* Have mechanism to baseline if available using
tools such as Wireshark or NetDecoder

ICS515 | ICS Visibility, Detection, and Response

Many analysts want to be able to analyze serial protocols. It seems more “ICS” in nature and attractive as a
challenge. However, there have not been any adversaries that have demonstrated the intent to utilize serial
communications. That does not mean that we should not be concerned about the security of these systems, but it
does mean that in any proper architecture, the adversary is going to have to utilize the business systems into the
operations technology systems and all the areas that we can collect and analyze properly long before getting to the
serial level.

When an issue is taking place at the serial communications level, that is also where it is important to have an
engineer who understands the system and the implementation to take action. That engineer, assisted by a security
analyst, can make better judgment calls on the communications with a higher return on value in time invested than
training security personnel to understand serial communications. Very rarely will serial collection even be
allowable.

It is recommended to baseline capture, though, if possible. This can be done with many protocols using the Linux
version of Wireshark. Additionally, the NetDecoder tool has around 20 ICS protocols it understands.

Image Reference:
NetDecoder

© 2021 Robert M. Lee 71
MatrikonOPC Sniffer

° Value:
* Capture OPC data between the client and server
* Source:
° http://www.matrikonopc.com/
products/ope-data-management/
ope-sniffer.aspx
‘ Methadalegy: ® Matrikon OPC
Gain permission first :
Install the Sniffer on the OPC server Sniffer
Select the appropriate interface Spe
Begin collection tummy
Store collected data for future analysis
. The “ICS” Aspect:
* Often times there will be tools available
¢ These are not “security” tools, but can be used as such
* Ask about diagnostics and configuration tools in the ICS

Server

1CS515 | ICS Visibility, Detection, and Response

OPC servers provide an open standard to allow interaction with different process controllers from Windows
applications. The MatrikonOPC Sniffer is a free tool that can be used in between an OPC client and OPC server to
output the communication going back and forth. It is advertised as a network interoperability tool to determine
configuration issues for integrators. However, it can serve as a useful collection tool for OPC data to be examined and
ensure that nothing looks malicious or out of the ordinary. This may not be the type of data that is used as an initial ©
indication of a threat, but the data can be used after a threat is identified to help verify the integrity of OPC systems.

The purpose of showing the tool is simply to note that there are diagnostics and configuration tools available in the
ICS that can be utilized like security tools. It depends on the ICS, the vendors, the industry, etc. Don’t just ask for
“security” tools — you may find none whereas you’ ll find a number of “diagnostics” tools that you can utilize for
security.

References:
Installation and user manual:
https://www.matrikonope.com/secure-login.aspx?ReturnUrl=%2 fportal%2fdownloads%2fproduct_manuals%2fOPC-

Sniffer-manual.pdf
https://www.matrikonopc.com/products/opc-data-management/opc-sniffer.aspx

72 © 2021 Robert M. Lee

7 TRHAH AMD © ® OP

a @

ne mm

an nona na na no @®
wT wow ww WH wy

At Sy

wo 8 © ww

e~ we Fe we Fe FF 2S DB LD «4

oe

Syslog

¢ Value:
* Gather logs from individual systems such as events and alerts
* Severity ratings assigned to logs help quickly sort through events
* Source:
* Most legacy field devices do not have syslog; however, many modern PLC/RTUs have the
ability to generate and send syslog events

* Protocol is defined by RFC 5424
* Methodology:
Check field devices for the capability to use syslog
Establish a syslog server and database (discussed later)
Establish alerts for when NSM personnel should be identified about the logs
Routinely check all logs, especially if you suspect an incident or threat on the network;
analysis will be discussed later in this section

ICS5I5 | ICS Visibility, Detection, and Response

Various devices have syslog enabled, such as the Emerson DeltaV smart switches and ABB's RTUS00 series. The
list has grown large in recent years; enabling syslog on devices is something you should contact your vendor about,
as it is more than likely that non-legacy systems will have it (it may be disabled by default but can be enabled).
Sylog helps identify key system events on devices such as user logins, firmware updates, or changes to logic. It's an
incredibly valuable source of data, especially for when we talk about data correlation later in this section.

PRI:
The PRI is made up of the Facility and Severity (8-bit value determined by multiplying the Facility by 8
and adding the Severity's value)
Header:
Header contains the ISO Timestamp and the Hostname or IP Address
Message:
Additional information broken into TAG and CONTENT fields

Sample Syslog Message:
<10> 2014-12-12T05:15:05:015Z 172.168.15.10 su—ID15 — BOM'su root' failed for cybati

Syslog Message Format

The syslog message format is fairly easy to understand after interacting with it a few times. It helps identify events
on systems. If, for example, you know that no one should update the firmware on a PLC, you can get a syslog alert
that someone is performing that action. That would quickly let you know that something is wrong. In addition,
seemingly unrelated and insignificant events, when looked at in a bigger context across the network, might reveal
patterns and malicious activity.

Syslog Example: Facility | is a user-level message. Severity 2 is for critical. The PRI would be 8*1+2=10. Then,

you have the ISO timestamp, the application "su" is "super user," the ID is 15, BOM is the encoding type, and "su
root" failed for cyabti is the message content of the syslog protocol.

© 2021 Robert M. Lee 73
¢ Value:
* Open-source, free, and widely understood NIDS that is easily customizable
* Contains preprocessors for Modbus TCP and DNP3 as well as many ICS signatures

* Source:
* Download from: https://www.snort.org/

¢ Methodology:
* Deploy at network chokepoints with a network tap (Inline can cause issues)
* Tune the signature rule set based on the needs of the network segment it is on
* Utilize network knowledge, threat intelligence, and open-source information

1CS515 | ICS Visibility, Detection, and Response

Snort is an open-source and free NIDS. It is widely used and considered one of the best open-source projects of all
time. It can be difficult to set up the first time, but there are numerous documents online to walk you through the
process. The important thing to know is that Snort does have preprocessors for Modbus TCP and DNP3 while
having numerous ICS signatures built in by default. The preprocessors allow it to dissect Modbus TCP and DNP3
correctly so that it can generate signatures based off of information such as invalid function codes. The Snort rules
from SourceFire are free to download, and they come out with new ones on a regular basis. Also, there is a large
community around Snort where people develop rules that help them and share them throughout the community.

When used, Snort should be deployed at network chokepoints with a tap or on a mirrored port. Be careful not to put
it inline unless you have to, because devices placed inline can threaten operations if they ever fail.

Tune your signature rule set based on the network segment that Snort is running on. Consider the following:

© OT networks will have different requirements and behavior than the enterprise DMZ.
© The outermost sensors (Internet boundary, enterprise, and so on) will be less specific.
* The innermost sensors (Supervisory network, Fieldbus, and so on) will be much more specific.

You should utilize your network knowledge in combination with threat intelligence and open-source information to
create and deploy the most-tailored signatures for your environment possible.

Snort Rule Format: Header
Snort rules are extremely valuable to testing out ideas on a network, as well as being an effective and free IDS.

Understanding the rules format allows for their effective use. Rules are broken into headers and options. The
headers contain information to identify higher level views of data such as NetFlow or 5-tuple information. What
should the rule do? Against what type of IP-based protocols? Against what IP addresses? On what ports?

The example is just part of one rule. Notice that a direction is given as well.

74 © 2021 Robert M. Lee

GO @ @ @W OM

@W

oe em nmnrnrnnrannnnmn @® © ® @
~ wy wy wD wp ww ww wy ww wa wy ae a wa

wp

py

)

‘Be

Snort rules are structured into headers and options:
¢ Headers identify what the rule should look for in NetFlow-type data
The common headers are:

¢ Actions dictate what the rule should do such as "alert" "pass" or "drop"

* Protocols tell the rule what protocol types to trigger on (TCP/UCP/ICMP/IP)
* Variables designate single or multiple IP addresses and networks

* Ports specify what port numbers the rule pertains to

Example: alert tep $PLANT_NETWORK 502

To dive deeper into Snort, read the book Snort Intrusion Detection and Prevention Toolkit by Brian Caswell, Jay
Beale, and Andrew Baker.

Snort Rule Format: Options

Snort rule options help get into the packet being analyzed a bit more and give the analyst options about what
happens when a signature triggers. In this case, we see the ability to give analysts a message (msg) when the rule
fires, dictate the flow (if the connection was established or not), what content existed (if the packet contained
certain strings of data), and accompanying information in the form of a reference (links to information).

The example at the bottom is the second half of a sample rule.

Snort rule options give granularity for the type of data that should be searched for in order to trigger a rule and what
information is returned:

* The parts inside the parentheses in a Snort rule are the options
Some Snort options are:

* msg: The information returned to an analyst when the rule triggers

* flow: Dictates if a connection has been established and to a server or client
* content: Looks through the packet or session for specific content to alert on
° reference: Associated data with the rule, such as a link to an advisory

¢ sid: The "Snort ID" assigns an identification number to the rule

Example: (msg:"Unauthorized access to field devices from non-whitelisted IP address";
flow:to_server,established; classtype:unauthorized-access; sid:1000001;)

Snort to Syslog

Converting Snort alerts to syslog allows for the data to be centralized at a syslog server and analyzed with other
types of network alerts. Remember that the focus of NSM is to be able to hunt throughout the network and analyze
large amounts of varying types of alerts. Snort alerts are useful in their own right, but the ability to combine them
with other sources of data makes them a powerful tool. Snort has native abilities to convert alerts to the syslog
format, but it is often preferable to use another process like Barnyard to do this for optimization purposes. This isn't
discussed in depth here because this entire process is automated in the Security Onion distribution, which we will
be looking at later in this section.

References:

Barnyard can be found at http://sourceforge.net/projects/barnyard/.
Good sources to help with Snort to syslog output include:
http://manual.snort.org/node2 1 .htm1

https://logrhythm.com/blog/

© 2021 Robert M. Lee 75
alert tep !$DNP3_CLIENT any -> $DNP3_SERVER $DNP3_PORTS (flow:from_client,established; content:"|05
64|"; depth:2; pcre:"/[\S\s] {10} (\x02|\x04|\x05]\x06)\x09/\\x0A|\xOF|\x12)/iAR"; msg:"SCADA_IDS: DNP3 —
Unauthorized Write Request to a PLC"; reference:url,digitalbond.com/tools/quickdraw/dnp3-rules; classtype:bad-
unknown; sid:1 111207; rev:1; priority:1;)

This is a rule from Digital Bond's IDS rules:
¢ It identifies unauthorized write requests to a PLC using the DNP3 protocol

Example Snort Rule

This is an example Snort rule from Digital Bond's ICS rules. In this example, we can see that Snort rules can
become complex looking but deliver real value. If you understand the format and can break the rule down piece by
piece, they are much less intimidating. Here, we see that the rule will ALERT on TCP traffic that is NOT from
known $DNP3_CLIENT systems on any port that is going in the direction of known $DNP3_SERVER systems on
known $DNP3_ PORTS. The options designate that the flow must be established from the client and that the content
must have the HEX value x05 and 0x64 at a depth of 2 bytes into the analyzed protocol. Then, we see "pcre" for
Pearl Regular Expressions allowing a regex string of HEX values to be searched for, which may be a denial-of-
service type of attack. The message then returns the information "SCADA_IDS: DNP3 — Unauthorized Write
Request to a PLC" and gives the reference of the Digital Bond website. The classtype helps an analyst understand a
bit more about the category of the threat and the SID and Rev state what rule ID number and revision this rule is.
Finally, the priority of 1 helps analysts sift through alerts to prioritize their efforts.

Reference:
DigitalBond

76 © 2021 Robert M. Lee

@

ree HO OH DH TH DW BW DW DW VD *W WM WP

i] 7 Oe] o PD

a
5)

wow © WS WJ

wo oOo Y@ WY WV

Ww Ww

Case Study: QuickDraw Rules

* Digital Bond's QuickDraw project includes Snort signatures for:
* SCADA preprocessors for easier protocol dissection and rule writing
* DNP3 IDS signatures
* EtherNet/IP IDS signatures
* Modbus TCP IDS signatures
* Vulnerability signatures

* Download the preprocessors and rules here:
hitps://www.digitalbond.com/tools/quickdraw/download/

alert tcp !$DNP3_CLIENT any -> $DNP3_SERVER $DNP3_PORTS
(flow:from_client,established; content:"|05 64|"; depth:2;
pere:"/[\S\s]{10}(\x02|\x04|\x05|\x06|\x09|\x0A|\xOF|\x12)/iAR";
msg:"SCADA_IDS: DNP3 - Unauthorized Write Request to a PLC";
reference:url,digitalbond.com/tools/quickdraw/dnp3-rules; classtype:bad-unknown;
sid:1111207; rev:1; priority:1;

ICS515 | ICS Visibility, Detection, and Response

The team at DigitalBond came up with a project called QuickDraw, where it took a number of ICS vulnerabilities
and built Snort signatures for them, as well as a few preprocessors.

Here's an example signature that looks for unauthorized write requests to a PLC:

Message: DNP3 — Unauthorized Write Request to a PLC
alert tcp !$DNP3_CLIENT any -> $DNP3_SERVER $DNP3_PORTS (flow:from_client,established;
content:"|05 64|"; depth:2; pcre:"/[\S\s] {10} (\x02\\x04|\x05|\x06\\xO9/\xOA|\xOF|\x12)/iAR";
msg:"SCADA_IDS: DNP3 — Unauthorized Write Request to a PLC";
reference:url,digitalbond.com/tools/quickdraw/dnp3-rules; classtype:bad-unknown; sid: 1111207; rev:1;
priority: 1;

Specifically, it states that an alert should be generated if TCP data is seen NOT originating from known DNP3
clients in the direction of the known DNP3 servers over DNP3 ports. The TCP data should be established from the
client, and there is a specific HEX string that is being looked for (05 64). The rule explains that this HEX string
should be located 2 bytes into the examined packet. PCRE in the rule lets us know that the rule is using Pearl
regular expressions for the following string in the rule. Then it says, "msg," which stands for message and issues the
alert saying, SCADA_IDS: DNP3 Unauthorized Write Request to a PLC. The rest of the information gives
references to look up the context for this alert.

The problem with this, and many other ICS rules, is they are overly complex and do not alert very often. They are
useful as forensic tools, but not as detection tools. A better detection would be removing the content and flow
sections and instead looking for only communications that are NOT DNP3 Clients that are talking to DNP3 Servers
on DNP3 Ports.

Reference:
DigitalBond

© 2021 Robert M. Lee 77
For more information on the DNP3 and Modbus TCP preprocessors, as well as some Snort ICS projects, check out:

* Preprocessors: https://blog.snort.org/2012/01 /snort-292-scada-preprocessors.html
* Digital Bond QuickDraw project: https://dale-peterson.com/digital-bond-archives/

You can define your entire known network in a variable such as $INTERNAL NET to $NETWORK and get alerts
on anything else seen communicating. This can help passively identify previously unknown devices, alert against

new clients joining the network, and pick up on adversaries scanning for hosts.

Reference:
https://www.sans.org/reading-room/whitepapers/detection/ network-ids-ips-deployment-strategies-2143

78 © 2021 Robert M. Lee

>

? eo nm oo 68 oe o

n a ff ® ® 8D ® ®@

id
wo ww

wS = wS

¢ Open-source threat detection
engine for network traffic

* More “modern” than Snort but
comparable in functionality and
rule writing; capable of multi-

gigabit traffic processing SURICATA

* Suricata rule format is leveraged
commonly including in
professional products

ICS515 | ICS Visibility, Detection, and Response

Suricata is an open-source threat detection engine that can perform IDS/IPS/NSM type functionality as well as pcap
processing. It’s a powerful tool and comparable to Snort, though it is often preferred over Snort due to its
performance and scalability features. Most importantly though, many modern-day professional products either use
Suricata directly or accept its rule-based language. Many of the ICS products out there will allow you to write
Suricata rules and then they’! convert them into their detection engines. Therefore, learning Suricata and its
language can be a very effective way to leverage open-source or professional products to search for threats in ICS
networks.

© 2021 Robert M. Lee 79
Suricata Primer

Suricata rules follow a standard structure:

* Action * Meta Keywords
¢ Protocol ° Reference
* Source/Dest IPs * Classtype
* Source/Dest Ports = Sapncknee TD
. ¢ Rule Revision

¢ Direction » Priority
* Rule Options /

Content

¢ Keywords e.g.,

Flow

ICS515 | ICS Visibility, Detection, and Response

Suricata rules follow a pretty standard structure that you will be familiar with if you’ve ever written Snort rules.
You need to declare an Action (e.g., “alert”), the Protocol (e.g., TCP or HTTP or UDP or DNS), the
Source/Destination IP addresses (e.g., 8.8.8.8 or $HOME_NET), Source/Destination Ports (e.g., ANY or 443), the
Direction of the communications (one direction or bidirectional), the Rule Options/Content (what are you looking
for), and then any Meta Keywords you want (e.g., references, ID, and how severe this is).

There’s obviously a lot of flexibility and options here, it is strongly advised to read the Suricata documentation on
rule writing as they give fantastic examples and explain in depth what all the keywords do. You can include
everything from a simple IOC to regex of content looking for various bytes in the network traffic.

References:

https://suricata.readthedocs.io/en/latest/rules/intro.html#rule-options

Tatyana Shishkova gave a great intro video on Suricata and it is worth reviewing:
https://www.youtube.com/watch?v=tvoqFBVSShA&ab_channel=OISF-Suricata

80 © 2021 Robert M. Lee

oO @ &@ & @M

oem @

of @ @ &@

)

no

n @® ® ®
wy

we we Ww Ww we

oe wow &§ F&F FTF WwW &

&

Suricata Example

alert icmp any any -> any any (msg:"SolarWinds Status Query request";
itype:8; content:"SolarWinds Status Query"; depth:23; threshold:type limit,
track by_src, count 1, seconds 86400; priority:0; sid:9003452; rev:1;)

Action = Alert “Echo”)

Protocol = ICMP ponent 5 What are we a wer —_
Source/Dest IP = Any/Any of payload many ytes om Deginning
Source/ Dest Ports = Any/Any Threshold = alert frequency

Direction = -> (Source to Dest) Priority = 0 (how severe?)

Rule Options SID=ID _
* Msg = What to alert Rev = Revision 1
° Itype = Specific ICMP type number (8

1CS515 | ICS Visibility, Detection, and Response

This is an example from the Dragos team where they wrote a SolarWinds focused detection. It’s a simple rule to
show how the structure of a rule is formed. It’s just one option - there are many ways to use a wide range of
keywords and content.

Here we see that it starts off with the action of “alert” which means it’! generate an alert when the conditions are
met. Then it requires the ICMP protocol with ANY source IP, followed by ANY source port communicating in the
direction of the destination on ANY destination IP and ANY destination port. Then we see the options. It starts off
with Msg of what to include in the alert to the user. The itype is an option to note what specific ICMP type number;
8 is for Echo. Then the content tag is used to designate a case sensitive (you can declare that it shouldn’t be case
sensitive if you want) content, in this case “SolarWinds Status Query” will appear somewhere in the content of the
packets being analyzed. Depth means how many bytes past the start of the payload being inspected should the
content be found. Thresholding is useful to make sure you don’t generate too many alerts, here it’s saying limit by
Source so that each Source query only generates | alert every 86,400 seconds before it re-alerts. It has a 0 priority
(just metadata on the severity) and has a Suricata ID and declares itself Revision 1.

While you have a lot of options in Suricata rules and can craft them a multitude of different ways, you must have
the first part (action/protocol/src/dst/ip/ports) and you’ ll have to assign an ID.

© 2021 Robert M. Lee 81
Suricata Simple 1OC Check

alert TCP any any <-> 41.22.24.102 any (msg:“Looking for an IP"; sid:9003452; rev:1;)

+ Suricata rules come in many forms and can be written to cover all
four types of detection

* IOC checks can be as simple as looking for an IP, domain, filename,
header, or other form of observable in network traffic

ICS515 | ICS Visibility, Detection, and Response

As with all rule creation, make sure not to make it more complex than your needs. The point is not the language or
all the options but satisfying the query you have. In the example on this slide you see a simple check for a suspect
IP address. The message/context is lacking but the rule works fine.

82 © 2021 Robert M. Lee

oe mem Oe 7 DW DO OO OW OW GW OO GW MM

™

>
we wwe &

we Ww Ww

* Value:
* Open-source and free Unix-based network monitoring framework
* Not just a NIDS; it is a flexible and adaptable scripting language
* Detection system, flow analyzer, preprocessors, forensic capabilities, and more
° Source:
* https://www.zeek.org/
* Requires a Unix platform
* Methodology:
* Zeek’s primary use is often as an IDS and then follow-on analysis can be completed

The Intelligence framework and Signature framework inside of Zeek can process IOCs and
alert based off of matched traffic

Because Zeek is more of a scripting language than standard IDS, it is more of an advanced
tool

The Zeek website contains documentation and tutorials to get started

ICS515 | ICS Visibility, Detection, and Response

Zeek, formerly called Bro, is considered one of the central tools for NSM because it can serve multiple purposes.
Zeek is a network monitoring framework with the capability to collect full content data (packet captures), detect
threats using highly customizable signatures for its IDS, and allow people to analyze the alerts and data through a
scriptable and adaptable language. Those practicing NSM should spend time becoming familiar with Zeek—even if
it can be a bit daunting at first. Although it is more complex than Snort, it also has a large community around it with
a variety of user manuals and video tutorials.

Zeek can be installed and run from any Unix-based platform. Although its primary use is often seen as an IDS, it
has powerful flow analysis features as well, and there are Intelligence frameworks and Signature frameworks for
quickly processing and using IOCs.

In the lab in this class, we focus on using Snort, because it is a viable tool for beginners and experts alike, but if you
intend to do any amount of NSM in your environment for a long duration of time, it is well worth checking out
Zeek.

Reference:
Modbus Modules: https://docs.zeek.org/en/latest/scripts/base/protocols/modbus/index.html
https://tcipg.org/sites/default/files/papers/2012_Q2_IDSforDNP3-1.pdf

Zeek Versus Snort

It's not feasible to cover Zeek in depth in this class because it is a scripting language and would require you spend a
lot of time understanding how to script in the language before implementing it. There are a number of Zeek-specific
training classes, tutorials, and information on the main Zeek website. The important thing to understand for this
class is that Snort is a great and quick tool to use to set up signatures that match against unauthorized access, use
IOC-type data from threat intelligence, or to quickly test ideas you have about malicious network data. Zeek is the
more powerful network security monitoring tool and is worth understanding. It's ability to decode a number of ICS
protocols and analyze them with deep packet inspection is worthwhile. Like Snort, Bro can be configured to store
its alerts in syslog format or send them to a centralized location.

© 2021 Robert M. Lee 83
Snort is a great tool to set up byte-matching signatures and alert on activity such as systems or ports being accessed
that should not be. Zeek’s scripting engine allows it to go past byte matching and dive deeper into contextual
information and security policies.

Zeek can use context to avoid a lot of false positives:

* Snort can have a rule to detect bytes in data that match a Modbus TCP unauthorized write
* Zeck can analyze the interaction to see that the client is actually a DNP3 client and not vulnerable to a
Modbus TCP unauthorized write

Both Snort and Zeek are valuable to an organization:
* For quick rules, especially those incorporating ideas such as IOC usage during an incident response

scenario, Snort can be very valuable
+ For deep analysis and understanding of events on the network, as well as packet decoding, Zeek is the

more powerful NSM tool
References:
* https://www.zeek.org
« CRD
84 © 2021 Robert M. Lee

eo @ @ @ HW BW W PM

ane oa h® Wh

mn
www a a a

eo 8 Ww Ww

oo ow &

)

ww PB DP PP

rt

ELK

* ELK is the combination of
Elasticsearch, Logstash, and
Kibana

Powerful log repository with
ability to pivot on the data to
identify abnormalities, security
events, etc.

Highly scalable and utilized in a
number of IT and OT industries

er To means an

Open-source with optional paid

managed services | a t i a 19988 1964

ICS515 | ICS Visibility, Detection, and Response

ELK is a combination of three tools: Elasticsearch, Logstash, and Kibana. The three tools combine together to make
an extremely versatile tool known as ELK. ELK is more or less a fork of Splunk managed by the open-source
community. It’s worth mentioning in this course, although we are not going to be using it. Security Onion is more
often used in ICS environments (mentioned in the next slide). However, if you are setting up an environment for IT
and OT folks to work out of across the IT and ICS, it is preferable to look at ELK.

Reference:
https://www.elastic.co/products

© 2021 Robert M. Lee 85
Detecting Abnormalities

O

Historical
Data

Baselines “

Identify Changes
and Oddities

ICS515 | ICS Visibility, Detection, and Response

A lot of what is searched for, especially with threat feeds, is based on signatures. A lot of great signatures exist, and
they are useful—even more useful are signatures that match your environment. For example, if OPC isn't in your
environment, it's good to state that if that port is ever seen in use, it may be an issue.

However, another effective way to detect threats in an ICS is through abnormalities. Given the more static nature of
an ICS, this can be extremely effective with Flow Data, Historical/Statistical Data, and Baselines.

Baselines

One of the best ways to identify abnormalities in an ICS is to baseline the environment. Any aspect of "whitelist" is
always going to be better at finding issues than a "blacklist" approach. The difficulty is that whitelists are hard to
maintain. However, in an ICS environment, it is possible to enforce and maintain a baseline for at least the network
communications. Even more usable, though, is a baseline that is passive in nature. An example of a passive baseline
is one that detects an issue and alerts you to it but does not take an active block, which may stop critical
communications. This empowers the defender without hampering operations.

86 © 2021 Robert M. Lee

ee) (>

we,

a
—~

) ww ww ww Ww =

@

° Flow data is information about the session
° 5 Tuple:

* Source IP

¢ Destination IP

¢ Source Port

¢ Destination Port
* Protocol

* Detect abnormalities in collected flow data by using tools to save
analyst time

ICS515 | ICS Visibility, Detection, and Response

Earlier in this section, we discussed Flow/Session Data as a type of NSM data. IPFIX was an example of this data
and it and NetFlow-based information can be useful to collect. With this data, we can begin to detect abnormalities.
It is easy to say that we should be able to detect HMI | talking to HMI 1 or other abnormalities in your
environment—but doing so at scale and over time can be challenging. There are a number of tools available that
support this information. Two open-source tools that can be used (and are used together) are SiLK and FlowBAT,
which we will look at over the next few slides.

© 2021 Robert M. Lee 87
eane .

Data Over Time

Bandwidth Spikes
Protocol Usage
Number of Connections
Session Duration

ICS515 | ICS Visibility, Detection, and Response

An easy way to think of Historical Data is to think about it in the context of data over time. What type of data, from
a high level and over time, could you quickly identify and what changes to it could you identify? This usually deals
with things such as bandwidth spikes, the times a protocol is used or how many systems use that protocol, the
number of connections, and session durations. This is also useful in the context of different hours and times of the
day. You may have more connections into the ICS at 2 p.m. on a Thursday than at 3 a.m. on a Sunday. How many
devices use Modbus TCP? If you see a spike in that, it may also be weird. These types of historical data sets are
useful.

88 © 2021 Robert M. Lee

om

Oo cL

ao 8 DD @D ®

n ?, nine ananwn nan
a

J

~

oS ww ww WwW we Ww Ww Ww

wwe ww & w&

Case Study: Switches Get Stitches

Researcher Eireann Leverett presented in 2014 on vulnerabilities in industrial
network switches

He, Colin Cassidy, and Matt Erasmus updated the presentation later that year
with more vulnerabilities

In 2015, Eireann and Colin included Robert M. Lee in the presentation series

for Black Hat and DEF CON

to show NSM for identifying these Tue 10
vulnerabilities wees
The research into the vulnerabilities 6-3
is extremely valuable ‘ Zn

ICS515 | ICS Visibility, Detection, and Response

At the 315* Chaos Computer Congress in Hamburg, Germany in 2014, Eireann Leverett presented the topic
"Switches get Stitches” where he evaluated industrial network switches from a number of vendors such as Siemens
Scalance X200 Version 4.3, GE Multilink ML800 version 4.2, GarrettCom, and more. He then built on this
presentation for 44CON and included researchers Colin Cassidy and Matt Erasmus.

For Black Hat and DEF CON 2015, Eireann and Colin uncovered new vulnerabilities and included Robert M. Lee
on the talk to speak from the defender's standpoint. Eireann and Colin's research was/is vital for uncovering
vulnerabilities in these industrial switches. These are vulnerabilities that are advanced and hard to uncover. Many
were discovered looking for basic security mechanisms that should have existed. The purpose was not meant to
highlight any one vendor but instead to show asset owners and operators the vulnerabilities that many adversaries
would already know about. Robert was included on the talk to show asset owners and operators how to perform
NSM to identify when these vulnerabilities were abused.

Blackhat Talk:
https://www.youtube.com/watch?v=urj KkQaspHQ

© 2021 Robert M..Lee 89
Example I/O Graph from Switches Get Stitches

ICS515 | ICS Visibility, Detection, and Response

Eireann did a firmware modification to an industrial network switch on a network, based on one of the
vulnerabilities in the firmware. Here, Robert M. Lee took the historical data of the network that the switch was on
in the form of an I/O graph from Wireshark. Can you spot the oddity? It occurs around 320 seconds into this
capture sample.

A number of the vulnerabilities shown to defenders in the Switches get Stitches presentation series highlight
undocumented backdoors, weak encryption, embedded RSA keys, and methods to modify the firmware on a switch.
All of these things make it so that the adversary can do anything they want on the network. There were no patches
for most of these and many of the vulnerabilities will never be fixed. Therefore, it is important to be able to at least
identify the issue. Then proper practices can take place. For example, Incident Response would be required if there
was modification of firmware in any devices, especially network switches.

90 © 2021 Robert M. Lee

(p>

ao fr @f @& & @ @& @& @ © Of @ OW Of @O @ Oo DW OG WH Ww wW
et

2

+

|

w ww ww ww

=
ww fp

Recommended Security Operations Workfl

Leverage ICS specific tooling to investigate the
detections (need threat and environmental context)

Escalated | ICS. :
cs Spesific ee
Detection Tera fee

ICS Specific Operations

Tier 2should understands
be hunting impact
when not better
triaging

7 | TE Specific Mas Tier 3
Detection Tier?

IT follows its normal path of triage and workflows

ICS515 | ICS Visibility, Detection, and Response

There are many ways to do security operations and they all require you to tailor to the mission you are performing
and the resources you have. However, in an ideal state, here is a view of how you can have a dedicated OT SOC
(which is just people/process/technology - it doesn’t mean a separate org chart even) with the proper attention paid
to ICS with integrated operations with IT.

You should have your various Enterprise/IT alerts/logs and ICS alerts/logs coming into the Enterprise SIEM. You
should leverage ICS specific products that understand ICS communications, threats, etc. for the ICS piece. In the
Enterprise SIEM your normal Tier 1 function, without ICS specific skills, performs the triaging/escalation work.

When the alerts get escalated to “Tier 2”, if they are Enterprise/IT they should follow the normal workflow you
have, which likely equates to Tier 2 performing investigations and Tier 3 doing more specialized incident response,
forensics, or malware analysis work.

When the alerts escalated are from the ICS network it should go to a dedicated and trained ICS specific Tier 2
function. That person or team should then pivot back into the ICS security tools to gain environmental context and
benefit from the ICS-specific understanding those tools provide. It is especially valuable if it’s the same product
doing the detection and has the ability to perform log/network analysis in the tool.

From there, if the ICS Tier 2 function assesses there to be real risk, it would escalate to a Tier 3 function. The Tier 3
function would not be a centralized specialized security team and instead a champion/advocate/liaison at the plant
or operations side of the house (i.e., someone at the Control Center, someone at the Refinery, someone at the
Manufacturing plant, etc.). Those staff will understand that specific plant and the potential impact. They can also
quickly deduce whether something is worth the time to investigate further. They do not need to be cyber specific
folks but folks who understand the cyber language; i.e., have interacted with Tier 2 ICS folks ahead of time and
understand how to run down the impact.

The Tier 2 ICS specific analysts shouldn’t be triaging as many alerts as the IT specific ones; ICS security is higher

impact, lower frequency. That means those personnel should be building relationships with plant personnel and
hunting when not triaging, which should make up most of their efforts.

© 2021 Robert M. Lee 91
Recommended Detection Approaches

* Identify the top and bottom “talkers” on the network:
« What IP addresses and ports are used the most and least
Identify biggest bandwidth users:
* Identify the infrastructure that's sending or receiving the largest files
Identify encrypted communications:
* Malware often uses encrypted C2; identify and make sure it’s legitimate
Identify critical assets and normalized traffic:

* Identify sensitive PLCs, core switches and routers, HMIs, etc.

* On the identified infrastructure at least understand what normal looks like
Look for known threat tradecraft first and then look for anomalies

« Should firmware updates be taking place in non-maintenance periods

¢ Are there peaks in the bandwidth usage on the network, across RF/Vsat/etc.
Identify critical changes through ICS protocol analysis

* GPS clock modifications, logic upload/downloads, forced stops, etc.
Identify exfiltration

° DNS exfiltration, HTTP POSTs, FTP PUT commands, ete.

ICS515 | ICS Visibility, Detection, and Response

A few useful analytics to get started revolve around things that don't rely on a lot of network knowledge. For
example, what IP addresses and ports are the most active on the network? Make sure they are all legitimate
communications. Are there large files consistently being passed to IP addresses? Examine those closely. If there are
encrypted links on the network, make sure they are supposed to be encrypted; malware doesn't necessarily send all
traffic off the network—drop sites are common (collect exfiltration to one location before sending it off the
network). If you have an IP address that is in all three of those categories (top talker, highest bandwidth, and
encrypted), it’s likely malicious. Check and be sure. In addition, learn your infrastructure and understand when
events should and should not be occurring on the network, such as firmware updates and patching.

92 © 2021 Robert M. Lee

>

or @ @ @ @ 8 8B BB @ ® @®

oo @ @

iD

nm Oo

” ul mn
w

‘

ew ww ww w

+ +

~

w

ay ap

ag w&

* Ina Terminal invoke the tool with “zeek” and then —C for ignoring invalid checksums and —r for
reading back a pcap file
* Zeek-cut is a common option as well on the tool to read ASCII Zeek logs for specific columns/fields of data
+ Example to read the conn.log and identify hostnames/domains between two IP addresses (origin and responder):
cat conn.log | zeek-cut id.orig_h id.resp_h host

Once you read a pcap into Zeek it will automatically create various log files that you then can
analyze; additionally, you can output any of the searches into grep to search for something
specific

conn.log

* Connections between two assets
* Can choose specific types of communications such as dns.log for just DNS communications between assets

files.log
All files transferred through the network traffic
* Can choose specific protocols such as http_files.log or smb_files.log for all files transferred via SMB

rdp.log

* Review RDP communications across the network

ICS515 | ICS Visibility, Detection, and Response

Zeek is a powerful network scripting tool that will let you analyze pcaps and their data (similar to syslog for
network traffic) quickly. Here are some commands that might be useful in the next few labs. The labs will only
utilize Zeek once, but you can optionally continue to use Zeek throughout the labs in this section.

© 2021 Robert M. Lee 93
Lab 3.2
Investigating Stage 2 Intrusions

Calistoga Refinery :

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

94 © 2021 Robert M. Lee

| | |

@

on7nnnnnm ® ®
ae we wh

OS @© Ww @& WwW w w&

Ww

Course Scenario Goals (4)

* Calistoga Refinery

* What is the name of the malicious project file?

BurnerManagementInfected.ACD

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee 95
Course Scenario Goals (5)

What did the adversary do to the safety PLC?

What is the malicious routine in the logic and what does it do?
What is the root cause of the attack?

Is the incident connected to C3PO’s incident?

* C3PO:

* What is the malicious action on the HMI?
* What Register was manipulated with what value?
* What malicious file executed on the HMI and when?

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

96 © 2021 Robert M. Lee

nnn © © ©  f oF OW GO GH GO GS OC GW MP

m

a or rs |
oe ww ww FF FE Wwieweweweesewe ww

aw

a

a

ICS NSM Analysis: When to Avoid IR

Incident Response
may not be needed if:

It was a network ‘It was a configuration snespentel maleue
policy violation | without IR

ICS515 | ICS Visibility, Detection, and Response

With the appropriated collected data and the ability to detect a threat, it is up to the phase of Analysis to determine
whether the threat is real and if it is worth starting an incident response process, or if the threat can be mitigated and
defended against quickly without any impacts to operations.

You will, without a doubt, have alerts on your network that look malicious but are not. These are identified as false-
positives and will consume most of your time in NSM, especially when sensors aren't tuned correctly. However,
there will be a number of policy violations, configuration issues, or even isolated threats that you can analyze and
determine that there actually is no need for an incident response process. These things can be remediated quickly
without consuming precious time and resources.

© 2021 Robert M. Lee 97
ICS NSM Analysis: What You Should Not Do

ICS515 | ICS Visibility, Detection, and Response

The analysis step is not intended to have personnel make decisions on stopping operations, taking systems offline,
or performing deep analysis on threats. These are all steps that are covered in Sections 3 and 4. The Analysis phase
is about validating the Detected threats so that a decision can be made on the next step. In the Detection phase,
analysts are asked to have a holistic view of the network to detect threats across multiple types of systems and
alerts. In Analysis, your job is to go past the systems to determine if and how the threat should be elevated for
handling.

98 © 2021 Robert M. Lee

ce @ @ @ © O&O GO PM

7 © @ @

oe ® ©  ®

a @® @®
rn rn a!

ww w ww WD W

we Ww &w Ww &w Ww Ww

wW

ICS NSM Analysis: What It Can Do

Modify Collection and | Be used to support IR
Detection tactics makers on need for IR or TEM teams' efforts
si i Bee | pee } e

Le aisa tice Nosdew SOUTER Ravens HaMisuieren a aotar tas See eases

ICS515 | ICS Visibility, Detection, and Response

Sometimes, Detection and Analysis overlap. As an example, maybe seeing a I/O spike is enough on a critical
segment to say that someone should investigate with the incident response mindset and methodology. Realistically
though, this is because Detection and Analysis are taking place at the same time. It's important to think through the
analysis and have competing hypotheses before ever kicking off incident response if you want to avoid false
positives. That does not have to be a slow process but make it a set part of the process.

Analysis can help drive better collection and detection tactics. Maybe a new tap is needed to be able to gather
traffic in a segment that you do not have current visibility into. Maybe there were abnormalities the detection phase

should have seen as well.

Common types of analysis that we will discuss in the rest of this section are Packet, Traffic, File, and Timeline
analysis.

© 2021 Robert M. Lee 99
Wireshark Common Methodology

a Detection phase generates an alert

Examine captured traffic in Wireshark

Start with the high level 5-Tuple
Ga Identify outliers and abnormalities

a B Look for protocol abnormalities*

ICSS515 | ICS Visibility, Detection, and Response

The first time you look at traffic on your network in Wireshark, you will have a panic moment. Learning new
protocols, understanding the coloring rules, and becoming familiar with normal TCP-based traffic such as HTTP

GET requests are all prerequisites to performing analysis in Wireshark.

It's common to see a single device used as a pivot point for adversaries. Sometimes it's hard to "go back in time."
That is, you don't have the packet captures but, if something were done, it's unlikely that a full cleanup and
antiforensic process is being conducted by an adversary. Lateral movement is common but internal C2 servers,
including staged points where SSL traffic can be used to exfil data out of the network, is also common.

Wireshark contains a number of features such as Follow TCP Stream and Follow UDP Stream to identify packets of
interest to you and all those that are in the same session. In addition, coloring rules and filtering options can be set
to quickly filter out what traffic analysts don't want to see or draw their attention to unusual patterns or issues.

As a general methodology, do not use Wireshark to just go through large amounts of data looking for evil. Let the
detection phase of NSM take care of generating an alert, either through signatures or abnormalities. Once there is
something detected, use Wireshark on already captured traffic, or filter to the IP of the alert and capture live traffic,
and start with examining the high-level data. Use 5-Tuple (Source/Destination IP, Source/Destination Port, and
Protocol) data to examine things that may be out of place. As an example, does HMI | normally talk to HMI 2? Is
Modbus TCP usually seen traversing the business network? What devices usually use OPC?

It is also possible to look for protocol manipulations. New Wireshark dissectors can be made with the support of
vendors to help look for this. There is an asterisk next to the "Look for protocol abnormalities" step because so far,
there has never been an adversary that has performed ICS protocol manipulations in a real-life intrusion. There's
been research but no adversary has needed to. Using native commands, functions, and network access has been
enough. However, we need to be able to examine the packets for future threats as well as understand, more
realistically, the accurate commands being used inappropriately. How many write commands should Modbus TCP
be doing in a certain network segment?

100 © 2021 Robert M. Lee

hy

@® ri @ @ > @ @

me

on @®m ®

(>

7h OM OM ® ®
> Vv We WwW Ww Ww wh eH Hy ww wy

ww w

»

“@r

a

)

NetworkMiner

Value:

* Quickly parse packet captures to detect OS

types, session data, export files, and
determine hostnames
Source:

* http://sourceforge.net/projects/networkmi Tea

ner/
« Has a free and a paid version
Methodology:

* Upload a packet capture into
NetworkMiner through the GUI or CLI
Files that shouldn't be traversing the
network should be extracted
Metadata and the context regarding the
type of file and its transfer can be enough
to initiate an incident response procedure
Pass the suspicious files to Threat Triage
teams

I
[Eset network adenterintbeit—
| [Parameter (1243) [Keywords [Ceare [Anomaies)
| Hosts (119) | Frames (15) Fles (60) images | Messages | Credential (6) | Seesions (69) | DNS 7)

D.pot Protocol Extencion

TOPS
Tor 1115
Ter 113
Ter 1120
Ter 125
TCP 1126
Ter nae
TCP 1116
TOP 1128 index.
TeP 1128 bind 9E,
TEP 38 ‘ bind 80.
Ter 1131 indecht.
TeP 1131 bad 67.
ep 1132 bind 80,

28 bind 23

i
i

PULTE ERE
3

Live Seng Buffer Usage |

ICS515 | ICS Visibility, Detection, and Response

NetworkMiner is a quick way to process packet captures and export files, session data, and other valuable
information like observed SSL keys and credentials. This is especially useful after detecting a threat on the network.
Many adversaries use authentication on their exfiltration as well as use encrypted services to send data off of your
network privately and with little cause for alarm. NetworkMiner can look through packet captures for credentials
that the adversaries might have been using. Be careful to always respect the privacy of others on the network and to
not abuse any other credentials you might find.

© 2021 Robert M. Lee

101
Incident Response Determination

Determining what qualifies as an issue requiring incident response must be

performed long before an incident ever occurs
* Planning is the key to IR

NSM ultimately leads to the determination if an issue needs to be escalated but
it is not the NSM personnel who should declare an incident:

* Management will likely listen to you if you have established trust, but it is ultimately their
call

Analysis matched with understood roles, responsibilities, and plans in an
organization is often the difference between failed and successful incident
response operations

Where in the ICS Cyber Kill Chain is your adversary?

ICS515 | ICS Visibility, Detection, and Response

ae

ae

eo 8 ® ® 2 Ym @

It is not the role of those performing NSM to declare an incident unless specifically given that authority. Instead, it
is their role to inform the larger team and management about validated and analyzed discoveries that should be
investigated with an incident response process.

For management:

* Enable your people with the technical training, understanding, and authority to perform the full NSM cycle.

* Listen to your analysts but ultimately the decision to engage in IR is a management-level decision based on
operational needs.

* Threats will occur; understanding your network and your threat landscape can help determine thresholds for
response.

For analysts:
* Be vocal about needs and requirements to complete a full NSM cycle; partial credit does not count.

¢ Analysts must provide analysis based on evidence and best understanding at that time.
* The better prepared and informed the IR team is, the safer network operations and people will be.

102 © 2021 Robert M. Lee

oOo? @ @

on7noeom ® &
Ww Ww Ww WV we we ee we we

ww ww fw

®w & Ww ww Ww ww

ae

Where in the ICS Cyber Kill Chain Is Your Advers

STAGE I - Intrusion ‘Observable Steps

Reconnaissance ¢

+ Analyzing the -?
“point” where @®
the adversary Ronee “
seems to be |
helps Exploit
determine
Incident
Response
considerations
and where to
monitor

External Neworktioss
(Basins or Plant Network)

DMZ Applications |

‘Supervisory Control Elements
(Network, Applientions, Servers) |

Install / Modify

|
i
|
i

STAGE 2 — ICS Attack
Develop

Was Stage 1 Test

data useful for
Stage 2?

Deliver
Install / Modify

1 Sensors & Actuators

Execute ICS Attack

LEOOO-DOOOH)

While performing NSM, try to always understand where your adversary is at. This is where “analysis” comes into
play with what you’ve detected from an overall stance. As an example, is your adversary just exploiting systems
right now? If so, it is unlikely that there will be actions in the environment to detect. Identifying and mitigating that
can reduce time and effort for you. However, if you have already seen C2 that’s successfully linked up to the
outside environment, then it is very likely that other actions are ongoing, even if you haven’t noticed them yet.

For the ICS portion, though, it’s important to consider what Stage 1 activity is being done. Are VPNs into the ICS
being accessed? Is the exfiltration of documents focused on IP, which may indicate espionage, or is it engineering
drawings and documents as well as process data that could also be useful for Stage 2 impacts?

Analyzing what the adversary is doing, where they are in their ICS Cyber Kill Chain, and what that means for

where you monitor and respond, is vital for the defense of your environment. Treat targeted threats as threats
instead of single, whack-a-mole styled intrusions.

© 2021 Robert M. Lee 103
ICS Escalation Factors

Impact to Indication of Impact to
monitoring or capability for safety or
support large scale reliability of
functions impact operations

Detection of ICS Cyber Kill

critical data Chain Stage 1

exfiltration actions could
reasonably

lead to Stage 2

ICS515 | ICS Visibility, Detection, and Response

ICS escalation factors should be determined well ahead of an incident and rely upon information from the risk
assessment process. Assessments are ideally initially performed prior to system commissioning and are updated to
reflect changes in current system functionality and architecture. Systems should have a determined risk profile
based on their function and exposure. For any type of Operational Technology (OT), it is important to determine
how system components affect the safe and reliable operation of an industrial process, or in a specific application of
automation. ICS can often impact personnel safety on-site and possibly off-site, affect the environment, and cause
significant business impacts by losing commercial availability of an asset or production capacity. Consequences can
be hard to determine properly and require a good engineering assessment to determine if the misuse of an ICS
component can simply disrupt the process or if it can result in a failure scenario that can circumvent or corrupt the
safety system and damage hard-to-repair or replace equipment.

Escalation factors can relate to the type of incident or policy violation, the possible risk associated with the incident
in question, and your ability to manage and respond to the incident.

ICS-specific Incident Escalation Factors include:

* Where in the segmented levels or tiers does evidence exist that might point to a compromise?

¢ Are there exploitable paths to more trusted networks?

* What is the function of the systems at risk? Is it safety-related (highest priority), control (second highest
priority), monitoring (visualization and view), or auxiliary/support?

* How many systems could be impacted by the threat or malware in question? (For example, can the attacker
achieve scale?)

° Has there been a recent removal of people having access to ICS components?

* Does evidence exist of control system traffic or production data leaving your controlled or protected
networks?

104 © 2021 Robert M. Lee

ouUcnmmUm mC OUCOWUCUCOLUCUCOUlLUClCeMllUllU le Ue

o @

aonanenhesw a @

ao
2 wewe

= ]

www w

as

ww

Lab 3.3
Traffic Analysis of Control Manipulation

This page intentionally left blank.

© 2021 Robert M. Lee

105
Course Scenario Goals (6)

¢ Calistoga Refinery
* What did the adversary do to the safety PLC?

The adversary pivoted from IT to OT, ultimately loading an infected project file
manipulating the logic of the safety PLC, but it is unknown what it did at this

time

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

106 © 2021 Robert M. Lee
wo

wwe eT oy ww ww

w Ww

<U]

Course Scenario Goals (7)

* What is the malicious routine in the logic and what does it do?
* What is the root cause of the attack?
* Is the incident connected to C3PO’s incident?
*« C3PO:
»—_Create-atepology-of the eontrel network.
* What is the malicious action on the HMI?

» What Register was manipulated with what value?
* What malicious file executed on the HMI and when?

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee 107
Event Analysis and Physical
Consequence

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

108 © 2021 Robert M. Lee

m mW. om, mM, m, m, om, om, m, om, ae
we wh ww ww w ww

ww ww

w a Ww

we &w @&w eB eB Ww Bw ww ah Ww aw

ww

’t Broke, Don’t

Interaction with the
Many process control ICS configuration or operation of
environments are a process environment is
deterministic stable typically not.an easy task, due
environments with few to the risk to operations and
changes occurring the possible outages required
to perform the work

Some sectors like nuclear, »
pharmaceuticals, chemical,
and defense systems require
long certification / _
recertification paths for
changes

When changes are required,
they typically go through
many levels of operations

review, with support from the
vendor

ICS515 | ICS Visibility, Detection, and Response

In many process environments the normal operate and maintain cycles drive towards break fix activity.
Instrumentation and controls engineers, or system integrators, or contractors typically come in with a goal of
“fixing” whatever is currently not working to restore operations as fast as possible, and then stay away from the
system to avoid any risk of causing a forced outage.

This mode of operation would look at each potential change (security patches, performance or optimization logic
modifications, security hardening, user access management, network modifications, firewall changes, etc.) as a risk
to the process. Therefore, each change would go through a review process to assess the prioritization of the
proposed change vs the risk to the process. For this reason, you would likely see a series of changes waiting for a
scheduled maintenance outage.

© 2021 Robert M. Lee 109
Making Change Mandatory

CIP-010-3 ~ Cyber Security — Configuration Change Management and Vulnerability Assessments Some sectors, like the North

Avlntroduction American electric sector have
Tile: Cyber Securty ~ Configuration Change Management and Vulnerabilty *developed requirements for
Assessments . ae : G
Number: cIP-010-3 identifying and applying security

Purpose: To prevent and detect unauthorized changes to BES Cyber Systems by related patches to operation al assets
specifying configuration change management and vulnerability assessment within sp ecifie tim elin es

requirements in support of protecting BES Cyber Systems from compromise that
could lead to misoperation or instability in the Bulk Electric System (BES).

CiP-013-1 ~ Cyber Security - Supply Chain Risk Management

In addition, there are also Supply

Chain specific requirements for
Number: cip-0134 interacting with vendors and
Purpose: To mitigate cyber security risks to the reliable operation of the Bulk validating patches

Electric Systern (BES) by implementing security controls for supply chain risk
management of BES Cyber Systems.

A. Introduction
Title: Cyber Security - Supply Chain Risk Management

ICS515 | ICS Visibility, Detection, and Response

In some sectors like the North American Bulk Electric System, Standards exist that require system hardening
actions, account management actions, logging, monitoring, security patching, malicious code and communications
detections, and full change management practices are implemented. These Standards require increased interaction
activities and the frequency at which those activities need to be performed.

In addition, there are Supply Chain Standards that provide specific requirements when performing actions like this
in working with OEMs, vendors, and other third parties.

Outside the North American Electric sector, there are not many other sectors in ICS providing requirements for this
level of interaction or supply chain processes.

110 © 2021 Robert M. Lee

eo DW DW Bh DP

nnn a om @ ® OD OH WH OH HH DH DWM BD

an
wo © WY YG YY VY VUeEVBPwo Www ewe eee er

Ww

Ww

High Interaction With an Operational Asset

Cybersecurity Related

User access changes
Group access changes

Local / perimeter firewall
changes

Network infrastructure changes
Protocol changes

Endpoint port and services
hardening

Patches

Display changes

Tag changes

Logic changes

Application area of responsibility
changes

Alarm package changes
Historian changes

Process performance /
optimization changes

ICS515 | ICS Visibility, Detection, and Response

While there are high levels of cybersecurity related changes in some sectors, there are operations related changes
that occur in all sectors. These changes are typically driven by process improvement efforts, equipment changes or
additions, operational enhancements for system operators, identified changes as a result of an event, or potentially
changes to the business or a sector requiring new operational capabilities.

© 2021 Robert M. Lee 111
Original Equipment Manufacturers

In power generation facilities, it is very common to find vendor and OEM
connections into the OT networks, as the OEM provides performance
analytics, optimization, and in some cases identifies preventative maintenance
needs.

While these vendor connections may be concerning from a cybersecurity
perspective and they should absolutely be looked at as an attack vector, in
many cases they will need to be managed and controlled; not removed.

A common optimization and performance improvement goal for generation
assets is to make operational adjustments to improve the heat rate of a unit.

ICS515 | ICS Visibility, Detection, and Response

In the electric sector there has long been discussion around OEM and vendor connections into ICS network
segments for the purpose of monitoring, analysis, performance tuning, and optimization. Many entities have looked
to these connections with concern over cybersecurity, compliance requirements, and warranty obligations. In many
cases these connections are a fact of life that need to be managed and many have developed innovative approaches
to reducing the risks. However, the benefits provided to the business may necessitate the need for the access to exist
in some controlled form.

With this access OEMs and other third parties can provide valuable services to the asset owner operator.

4112 © 2021 Robert M. Lee

id

om OB WO OM ff fF & ® & &

aoemqqqnwno @ @
www ww we ww w

ww wW

cU)

U)

J OC CO

Heat Rate Change

* In the next lab, the OEM has
provided logic changes to
improve the heat rate of the
unit
The Heat Rate is the amount

of fuel required to generate a
kWh of energy. The goal is to
improve efficiency driving
down the cost of a MW =
generation unit heat rate x cost
of fuel

Often times an OEM, vendor, system integrator, or contractor will come onsite during a maintenance window to
perform a series of activities to make planned changes. In other cases, the 3" party may ask onsite personnel to

OEM has made calculation
changes in the logic to
implement a more aggressive
fuel valve control

ICS515 | ICS Visibility, Detection, and Response

make the changes and work with the 3"4 party remotely. In the next lab, the OEM has made a minor change to the
fuel control valve calculation and asked for the asset owner to apply the runtime edit to avoid any system impacts.

The business is looking to make the unit more profitable by decreasing the cost of generating electricity and
maximizing the market value of electricity sold into the energy market —- commonly referred to as the “spark

spread” — generate low, sell high.

© 2021 Robert M. Lee

113
Lab 3.4
Validating System Logic Changes

1CS$515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

114 © 2021 Robert M. Lee

*oeoneorr® © MOD OH OD GH GH HF & PM

a @O @ ® ® ®
WO ww www ww

ww ww ww

Qw

YY wweveVv VVyvUVvewveWwyoyW

Troubleshooting is Hard

Start with the local physical element that appears to be mis-
operating

Look to the I/O point mapping where the final control element is
being driven from

Examine the signal or communications path where commands are
being received

Examine the associated tag list to point list translation areas
Determine if the HMI displays are receiving accurate data and
displaying it in the correct areas

ICS515 | ICS Visibility, Detection, and Response

When troubleshooting, it is often most helpful to start at the physical layer. Even when it seems that would be
unlikely, it is best to validate. Across a complex system there are numerous areas that need to be reviewed for
accuracy, and that will require documentation on what the expected known good state of the system should be.
Performing this validation and review will also likely require a variety of different personnel that have differing
roles and responsibilities through the organization.

© 2021 Robert M. Lee 115
Restoration Actions

When a mis-operation is identified, it can be importan
could be a coincidence event. In the next lab, verify that the system is behaving in the manner i

Gen Breaker Open PS
Gen Breaker Close PS
‘Trans Breaker Open PG
‘Trans Breaker Close PB
GND

Protection Relay Fault Light
‘Trans Breaker Open Light
Gen Breaker Open tight
Interconnect Status Light

Distribution Residential Pot
Distribution Industrial Pot

Ground
Generation Bar Graph
industrial Output % Meter

~W Verify the

Oo

oO

oO
oO

correct terminal
point lights
when the correct
Gen breaker
push button is
activated

Understanding and documenting the
changes that have led to an adverse impact
on the system will be very important in the
analysis and restoration activities.

Reviewing the system ions changes
that occurred in the field and verifying the
status of the field manual controls, to the
termina opel troubleshoot
rem will quic! in troul ing
there is nothing in the field mis-
operating.

‘The error must be in the logic and
downloading the Je gies own,

logic should put the system back in a good
state.

1CS515 | ICS Visibility, Detection, and Response

it is not, you will need to load known good logic in the system.

116

© 2021 Robert M. Lee

t to first eliminate a physical error or faulty connection that
it is intended and, if

a nn mnemnrest et & © PM

om

mm,

bt

=
wwe wewryeweyse ys we ee wey wewo ww

wy

When Known Good = No Good

Testing and validating files for restoration purposes may work fine in test environments and then
behave differently in production.

The known good logic file has been restored and the logic is back to a trusted state, but the
operational data and the state of the system may be different.

Potentially a field point verification of the associated facilities would be looked at, to help
troubleshoot the issue.

While an operational investigation is underway, there may also be a need to start an ineident
response activation due to the third-party logic change that seems to have started the suspicio
events.

ICS515 | ICS Visibility, Detection, and Response

Events like this will create confusion throughout an organization, bringing many things into question as the
organization attempts to restore operations and encounters additional challenges. Event details and analysis
capabilities will become very important in the effort to fully understand what is happening and why. Additionally,
there is always a difficult decision to be made during many operational events — is this a failing device,
misconfiguration, human error, or potentially something malicious?

When does an organization know with certainty that an incident has occurred? Should they routinely engage
incident responders early just in case an event is due to malicious activity? In an effort to restore a system, there
are many actions that operations field personnel can take that may “fix” the problem and in parallel, unintentionally
hide the cause. This may be a necessary step to ensure safety and reliability quickly, but engaging incident response
personnel early may allow for some collection of information for after-the-fact analysis.

© 2021 Robert M. Lee 117
You Asked For It

Are you ready for help?

Incident response teams will need help in order to help.

Walk through with appropriate personnel on team:

+ Safety briefing for all facilities that will be visited

¢ Overview of how the system works.

+ Identify established system to system trusted communication flows,.

« Review physical prints.

+ Facility network prints.

+ Static file analysis depicting system configurations for firewall rules, network switches,
communications protocols, system configs.

+ Log file review, alerts, and system events - including operational events and historian data.

ICS5I5 | ICS Visibility, Detection, and Response

Sending out the bat signal and starting an incident response activity will start a larger effort with a team of
responders who will need help from operations teams before they can contribute to any response activities. For
incident responders, it is import to understand the uniqueness of each ICS environment, and the specifics of what
normal operations look like, as you help to try and identify the cause of the suspicious activity.

118 © 2021 Robert M. Lee

oe 8

no. OD @

oo

ann @ @® ©

‘LD
a

Lab 3.5
Field Point Verification

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee 119
Course Scenario Goals (8)

« C3PO

* What is the malicious action on the HMI?

We were locked out of the HMI and loading new logic didn’t help.

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

120 © 2021 Robert M. Lee

qa? a ae a aw <a ” =

<B

am
we =~

—5

uw

Course Scenario Goals (9)

* Calistoga

* What is the malicious routine in the logic and what does it do?
* What is the root cause of the attack?
« Ts the incident connected to C3PO’s incident?

« C3PO:

+ What Register was manipulated with what value?
* What malicious file executed on the HMI and when?

ICS515 | ICS Visibility, Detection, and Response

This page intentionally left blank.

© 2021 Robert M. Lee 121
